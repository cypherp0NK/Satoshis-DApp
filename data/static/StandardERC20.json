{
    "abi": [
      {
        "inputs": [],
        "stateMutability": "payable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "checkBalance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_r",
            "type": "address"
          }
        ],
        "name": "mint",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "allSourcePaths": {
      "1": "contracts/SatoshisVisionToken.sol"
    },
    "ast": {
      "absolutePath": "contracts/SatoshisVisionToken.sol",
      "exportedSymbols": {
        "Context": [
          1965
        ],
        "ERC20": [
          2506
        ],
        "ERC20Decimals": [
          2532
        ],
        "IERC20": [
          1923
        ],
        "IERC20Metadata": [
          1945
        ],
        "StandardERC20": [
          2588
        ]
      },
      "id": 2589,
      "license": "MIT",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 1847,
          "literals": [
            "solidity",
            "0.8",
            ".18"
          ],
          "nodeType": "PragmaDirective",
          "src": "32:23:1"
        },
        {
          "abstract": false,
          "baseContracts": [],
          "canonicalName": "IERC20",
          "contractDependencies": [],
          "contractKind": "interface",
          "documentation": {
            "id": 1848,
            "nodeType": "StructuredDocumentation",
            "src": "57:70:1",
            "text": " @dev Interface of the ERC20 standard as defined in the EIP."
          },
          "fullyImplemented": false,
          "id": 1923,
          "linearizedBaseContracts": [
            1923
          ],
          "name": "IERC20",
          "nameLocation": "138:6:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "documentation": {
                "id": 1849,
                "nodeType": "StructuredDocumentation",
                "src": "151:66:1",
                "text": " @dev Returns the amount of tokens in existence."
              },
              "functionSelector": "18160ddd",
              "id": 1854,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "totalSupply",
              "nameLocation": "231:11:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1850,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "242:2:1"
              },
              "returnParameters": {
                "id": 1853,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1852,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1854,
                    "src": "268:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1851,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "268:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "267:9:1"
              },
              "scope": 1923,
              "src": "222:55:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 1855,
                "nodeType": "StructuredDocumentation",
                "src": "283:72:1",
                "text": " @dev Returns the amount of tokens owned by `account`."
              },
              "functionSelector": "70a08231",
              "id": 1862,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "balanceOf",
              "nameLocation": "369:9:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1858,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1857,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "387:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1862,
                    "src": "379:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1856,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "379:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "378:17:1"
              },
              "returnParameters": {
                "id": 1861,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1860,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1862,
                    "src": "419:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1859,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "419:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "418:9:1"
              },
              "scope": 1923,
              "src": "360:68:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 1863,
                "nodeType": "StructuredDocumentation",
                "src": "434:209:1",
                "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
              },
              "functionSelector": "a9059cbb",
              "id": 1872,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "transfer",
              "nameLocation": "657:8:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1868,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1865,
                    "mutability": "mutable",
                    "name": "recipient",
                    "nameLocation": "674:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1872,
                    "src": "666:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1864,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "666:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1867,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "693:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1872,
                    "src": "685:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1866,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "685:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "665:35:1"
              },
              "returnParameters": {
                "id": 1871,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1870,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1872,
                    "src": "719:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 1869,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "719:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "718:6:1"
              },
              "scope": 1923,
              "src": "648:77:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 1873,
                "nodeType": "StructuredDocumentation",
                "src": "731:264:1",
                "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
              },
              "functionSelector": "dd62ed3e",
              "id": 1882,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "allowance",
              "nameLocation": "1009:9:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1878,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1875,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "1027:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1882,
                    "src": "1019:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1874,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1019:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1877,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "1042:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1882,
                    "src": "1034:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1876,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1034:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1018:32:1"
              },
              "returnParameters": {
                "id": 1881,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1880,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1882,
                    "src": "1074:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1879,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1074:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1073:9:1"
              },
              "scope": 1923,
              "src": "1000:83:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 1883,
                "nodeType": "StructuredDocumentation",
                "src": "1089:642:1",
                "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
              },
              "functionSelector": "095ea7b3",
              "id": 1892,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "approve",
              "nameLocation": "1745:7:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1888,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1885,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "1761:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1892,
                    "src": "1753:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1884,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1753:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1887,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "1778:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1892,
                    "src": "1770:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1886,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1770:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1752:33:1"
              },
              "returnParameters": {
                "id": 1891,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1890,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1892,
                    "src": "1804:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 1889,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1804:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1803:6:1"
              },
              "scope": 1923,
              "src": "1736:74:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 1893,
                "nodeType": "StructuredDocumentation",
                "src": "1816:296:1",
                "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
              },
              "functionSelector": "23b872dd",
              "id": 1904,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "transferFrom",
              "nameLocation": "2126:12:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1900,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1895,
                    "mutability": "mutable",
                    "name": "sender",
                    "nameLocation": "2156:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1904,
                    "src": "2148:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1894,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2148:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1897,
                    "mutability": "mutable",
                    "name": "recipient",
                    "nameLocation": "2180:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1904,
                    "src": "2172:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1896,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2172:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1899,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "2207:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1904,
                    "src": "2199:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1898,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2199:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2138:81:1"
              },
              "returnParameters": {
                "id": 1903,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1902,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1904,
                    "src": "2238:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 1901,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2238:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2237:6:1"
              },
              "scope": 1923,
              "src": "2117:127:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "anonymous": false,
              "documentation": {
                "id": 1905,
                "nodeType": "StructuredDocumentation",
                "src": "2250:158:1",
                "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
              },
              "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
              "id": 1913,
              "name": "Transfer",
              "nameLocation": "2419:8:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1912,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1907,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "2444:4:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1913,
                    "src": "2428:20:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1906,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2428:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1909,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "2466:2:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1913,
                    "src": "2450:18:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1908,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2450:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1911,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "2478:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1913,
                    "src": "2470:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1910,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2470:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2427:57:1"
              },
              "src": "2413:72:1"
            },
            {
              "anonymous": false,
              "documentation": {
                "id": 1914,
                "nodeType": "StructuredDocumentation",
                "src": "2491:148:1",
                "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
              },
              "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "id": 1922,
              "name": "Approval",
              "nameLocation": "2650:8:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1921,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1916,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "2675:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1922,
                    "src": "2659:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1915,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2659:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1918,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "2698:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1922,
                    "src": "2682:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1917,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2682:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1920,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "2715:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1922,
                    "src": "2707:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1919,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2707:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2658:63:1"
              },
              "src": "2644:78:1"
            }
          ],
          "scope": 2589,
          "src": "128:2596:1",
          "usedErrors": []
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 1925,
                "name": "IERC20",
                "nameLocations": [
                  "2950:6:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1923,
                "src": "2950:6:1"
              },
              "id": 1926,
              "nodeType": "InheritanceSpecifier",
              "src": "2950:6:1"
            }
          ],
          "canonicalName": "IERC20Metadata",
          "contractDependencies": [],
          "contractKind": "interface",
          "documentation": {
            "id": 1924,
            "nodeType": "StructuredDocumentation",
            "src": "2805:116:1",
            "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
          },
          "fullyImplemented": false,
          "id": 1945,
          "linearizedBaseContracts": [
            1945,
            1923
          ],
          "name": "IERC20Metadata",
          "nameLocation": "2932:14:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "documentation": {
                "id": 1927,
                "nodeType": "StructuredDocumentation",
                "src": "2963:54:1",
                "text": " @dev Returns the name of the token."
              },
              "functionSelector": "06fdde03",
              "id": 1932,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "name",
              "nameLocation": "3031:4:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1928,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3035:2:1"
              },
              "returnParameters": {
                "id": 1931,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1930,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1932,
                    "src": "3061:13:1",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1929,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3061:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3060:15:1"
              },
              "scope": 1945,
              "src": "3022:54:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 1933,
                "nodeType": "StructuredDocumentation",
                "src": "3082:56:1",
                "text": " @dev Returns the symbol of the token."
              },
              "functionSelector": "95d89b41",
              "id": 1938,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "symbol",
              "nameLocation": "3152:6:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1934,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3158:2:1"
              },
              "returnParameters": {
                "id": 1937,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1936,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1938,
                    "src": "3184:13:1",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1935,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3184:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3183:15:1"
              },
              "scope": 1945,
              "src": "3143:56:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 1939,
                "nodeType": "StructuredDocumentation",
                "src": "3205:65:1",
                "text": " @dev Returns the decimals places of the token."
              },
              "functionSelector": "313ce567",
              "id": 1944,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nameLocation": "3284:8:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1940,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3292:2:1"
              },
              "returnParameters": {
                "id": 1943,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1942,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1944,
                    "src": "3318:5:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 1941,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "3318:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3317:7:1"
              },
              "scope": 1945,
              "src": "3275:50:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 2589,
          "src": "2922:405:1",
          "usedErrors": []
        },
        {
          "abstract": true,
          "baseContracts": [],
          "canonicalName": "Context",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 1946,
            "nodeType": "StructuredDocumentation",
            "src": "3383:496:1",
            "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
          },
          "fullyImplemented": true,
          "id": 1965,
          "linearizedBaseContracts": [
            1965
          ],
          "name": "Context",
          "nameLocation": "3898:7:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "body": {
                "id": 1954,
                "nodeType": "Block",
                "src": "3974:34:1",
                "statements": [
                  {
                    "expression": {
                      "expression": {
                        "id": 1951,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3991:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3995:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3991:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 1950,
                    "id": 1953,
                    "nodeType": "Return",
                    "src": "3984:17:1"
                  }
                ]
              },
              "id": 1955,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_msgSender",
              "nameLocation": "3921:10:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1947,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3931:2:1"
              },
              "returnParameters": {
                "id": 1950,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1949,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1955,
                    "src": "3965:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1948,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3965:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3964:9:1"
              },
              "scope": 1965,
              "src": "3912:96:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 1963,
                "nodeType": "Block",
                "src": "4081:32:1",
                "statements": [
                  {
                    "expression": {
                      "expression": {
                        "id": 1960,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4098:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4102:4:1",
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "src": "4098:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "functionReturnParameters": 1959,
                    "id": 1962,
                    "nodeType": "Return",
                    "src": "4091:15:1"
                  }
                ]
              },
              "id": 1964,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_msgData",
              "nameLocation": "4023:8:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1956,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4031:2:1"
              },
              "returnParameters": {
                "id": 1959,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1958,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1964,
                    "src": "4065:14:1",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 1957,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4065:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4064:16:1"
              },
              "scope": 1965,
              "src": "4014:99:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "internal"
            }
          ],
          "scope": 2589,
          "src": "3880:235:1",
          "usedErrors": []
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 1967,
                "name": "Context",
                "nameLocations": [
                  "5368:7:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1965,
                "src": "5368:7:1"
              },
              "id": 1968,
              "nodeType": "InheritanceSpecifier",
              "src": "5368:7:1"
            },
            {
              "baseName": {
                "id": 1969,
                "name": "IERC20",
                "nameLocations": [
                  "5377:6:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1923,
                "src": "5377:6:1"
              },
              "id": 1970,
              "nodeType": "InheritanceSpecifier",
              "src": "5377:6:1"
            },
            {
              "baseName": {
                "id": 1971,
                "name": "IERC20Metadata",
                "nameLocations": [
                  "5385:14:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1945,
                "src": "5385:14:1"
              },
              "id": 1972,
              "nodeType": "InheritanceSpecifier",
              "src": "5385:14:1"
            }
          ],
          "canonicalName": "ERC20",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 1966,
            "nodeType": "StructuredDocumentation",
            "src": "4177:1172:1",
            "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
          },
          "fullyImplemented": true,
          "id": 2506,
          "linearizedBaseContracts": [
            2506,
            1945,
            1923,
            1965
          ],
          "name": "ERC20",
          "nameLocation": "5359:5:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 1976,
              "mutability": "mutable",
              "name": "_balances",
              "nameLocation": "5442:9:1",
              "nodeType": "VariableDeclaration",
              "scope": 2506,
              "src": "5406:45:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "typeName": {
                "id": 1975,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 1973,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5414:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "5406:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 1974,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5425:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 1982,
              "mutability": "mutable",
              "name": "_allowances",
              "nameLocation": "5514:11:1",
              "nodeType": "VariableDeclaration",
              "scope": 2506,
              "src": "5458:67:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "typeName": {
                "id": 1981,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 1977,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5466:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "5458:47:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 1980,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 1978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5485:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "5477:27:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 1979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5496:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 1984,
              "mutability": "mutable",
              "name": "_totalSupply",
              "nameLocation": "5548:12:1",
              "nodeType": "VariableDeclaration",
              "scope": 2506,
              "src": "5532:28:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1983,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5532:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 1986,
              "mutability": "mutable",
              "name": "_name",
              "nameLocation": "5582:5:1",
              "nodeType": "VariableDeclaration",
              "scope": 2506,
              "src": "5567:20:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 1985,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5567:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 1988,
              "mutability": "mutable",
              "name": "_symbol",
              "nameLocation": "5608:7:1",
              "nodeType": "VariableDeclaration",
              "scope": 2506,
              "src": "5593:22:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 1987,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5593:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "visibility": "private"
            },
            {
              "body": {
                "id": 2004,
                "nodeType": "Block",
                "src": "5981:57:1",
                "statements": [
                  {
                    "expression": {
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1996,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1986,
                        "src": "5991:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1997,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "5999:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "5991:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 1999,
                    "nodeType": "ExpressionStatement",
                    "src": "5991:13:1"
                  },
                  {
                    "expression": {
                      "id": 2002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2000,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "6014:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2001,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "6024:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "6014:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 2003,
                    "nodeType": "ExpressionStatement",
                    "src": "6014:17:1"
                  }
                ]
              },
              "documentation": {
                "id": 1989,
                "nodeType": "StructuredDocumentation",
                "src": "5622:298:1",
                "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
              },
              "id": 2005,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1994,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1991,
                    "mutability": "mutable",
                    "name": "name_",
                    "nameLocation": "5951:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2005,
                    "src": "5937:19:1",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1990,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5937:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1993,
                    "mutability": "mutable",
                    "name": "symbol_",
                    "nameLocation": "5972:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2005,
                    "src": "5958:21:1",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1992,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5958:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5936:44:1"
              },
              "returnParameters": {
                "id": 1995,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "5981:0:1"
              },
              "scope": 2506,
              "src": "5925:113:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1932
              ],
              "body": {
                "id": 2014,
                "nodeType": "Block",
                "src": "6172:29:1",
                "statements": [
                  {
                    "expression": {
                      "id": 2012,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "6189:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 2011,
                    "id": 2013,
                    "nodeType": "Return",
                    "src": "6182:12:1"
                  }
                ]
              },
              "documentation": {
                "id": 2006,
                "nodeType": "StructuredDocumentation",
                "src": "6044:54:1",
                "text": " @dev Returns the name of the token."
              },
              "functionSelector": "06fdde03",
              "id": 2015,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "name",
              "nameLocation": "6112:4:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2008,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "6139:8:1"
              },
              "parameters": {
                "id": 2007,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6116:2:1"
              },
              "returnParameters": {
                "id": 2011,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2010,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2015,
                    "src": "6157:13:1",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 2009,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6157:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6156:15:1"
              },
              "scope": 2506,
              "src": "6103:98:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1938
              ],
              "body": {
                "id": 2024,
                "nodeType": "Block",
                "src": "6385:31:1",
                "statements": [
                  {
                    "expression": {
                      "id": 2022,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1988,
                      "src": "6402:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 2021,
                    "id": 2023,
                    "nodeType": "Return",
                    "src": "6395:14:1"
                  }
                ]
              },
              "documentation": {
                "id": 2016,
                "nodeType": "StructuredDocumentation",
                "src": "6207:102:1",
                "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
              },
              "functionSelector": "95d89b41",
              "id": 2025,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "symbol",
              "nameLocation": "6323:6:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2018,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "6352:8:1"
              },
              "parameters": {
                "id": 2017,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6329:2:1"
              },
              "returnParameters": {
                "id": 2021,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2020,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2025,
                    "src": "6370:13:1",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 2019,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6370:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6369:15:1"
              },
              "scope": 2506,
              "src": "6314:102:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1944
              ],
              "body": {
                "id": 2034,
                "nodeType": "Block",
                "src": "7105:26:1",
                "statements": [
                  {
                    "expression": {
                      "hexValue": "3138",
                      "id": 2032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7122:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "functionReturnParameters": 2031,
                    "id": 2033,
                    "nodeType": "Return",
                    "src": "7115:9:1"
                  }
                ]
              },
              "documentation": {
                "id": 2026,
                "nodeType": "StructuredDocumentation",
                "src": "6422:613:1",
                "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "functionSelector": "313ce567",
              "id": 2035,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nameLocation": "7049:8:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2028,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "7080:8:1"
              },
              "parameters": {
                "id": 2027,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "7057:2:1"
              },
              "returnParameters": {
                "id": 2031,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2030,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2035,
                    "src": "7098:5:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 2029,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "7098:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7097:7:1"
              },
              "scope": 2506,
              "src": "7040:91:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1854
              ],
              "body": {
                "id": 2044,
                "nodeType": "Block",
                "src": "7261:36:1",
                "statements": [
                  {
                    "expression": {
                      "id": 2042,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1984,
                      "src": "7278:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 2041,
                    "id": 2043,
                    "nodeType": "Return",
                    "src": "7271:19:1"
                  }
                ]
              },
              "documentation": {
                "id": 2036,
                "nodeType": "StructuredDocumentation",
                "src": "7137:49:1",
                "text": " @dev See {IERC20-totalSupply}."
              },
              "functionSelector": "18160ddd",
              "id": 2045,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "totalSupply",
              "nameLocation": "7200:11:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2038,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "7234:8:1"
              },
              "parameters": {
                "id": 2037,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "7211:2:1"
              },
              "returnParameters": {
                "id": 2041,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2040,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2045,
                    "src": "7252:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2039,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7252:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7251:9:1"
              },
              "scope": 2506,
              "src": "7191:106:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1862
              ],
              "body": {
                "id": 2058,
                "nodeType": "Block",
                "src": "7438:42:1",
                "statements": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 2054,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1976,
                        "src": "7455:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2056,
                      "indexExpression": {
                        "id": 2055,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "7465:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7455:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 2053,
                    "id": 2057,
                    "nodeType": "Return",
                    "src": "7448:25:1"
                  }
                ]
              },
              "documentation": {
                "id": 2046,
                "nodeType": "StructuredDocumentation",
                "src": "7303:47:1",
                "text": " @dev See {IERC20-balanceOf}."
              },
              "functionSelector": "70a08231",
              "id": 2059,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "balanceOf",
              "nameLocation": "7364:9:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2050,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "7411:8:1"
              },
              "parameters": {
                "id": 2049,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2048,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "7382:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2059,
                    "src": "7374:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2047,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7374:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7373:17:1"
              },
              "returnParameters": {
                "id": 2053,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2052,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2059,
                    "src": "7429:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2051,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7429:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7428:9:1"
              },
              "scope": 2506,
              "src": "7355:125:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1872
              ],
              "body": {
                "id": 2079,
                "nodeType": "Block",
                "src": "7775:80:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2071,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "7795:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7795:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2073,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2062,
                          "src": "7809:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2074,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2064,
                          "src": "7820:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2070,
                        "name": "_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2310,
                        "src": "7785:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7785:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2076,
                    "nodeType": "ExpressionStatement",
                    "src": "7785:42:1"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 2077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7844:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 2069,
                    "id": 2078,
                    "nodeType": "Return",
                    "src": "7837:11:1"
                  }
                ]
              },
              "documentation": {
                "id": 2060,
                "nodeType": "StructuredDocumentation",
                "src": "7486:192:1",
                "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
              },
              "functionSelector": "a9059cbb",
              "id": 2080,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "transfer",
              "nameLocation": "7692:8:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2066,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "7751:8:1"
              },
              "parameters": {
                "id": 2065,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2062,
                    "mutability": "mutable",
                    "name": "recipient",
                    "nameLocation": "7709:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2080,
                    "src": "7701:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2061,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7701:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2064,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "7728:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2080,
                    "src": "7720:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2063,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7720:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7700:35:1"
              },
              "returnParameters": {
                "id": 2069,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2068,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2080,
                    "src": "7769:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 2067,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "7769:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7768:6:1"
              },
              "scope": 2506,
              "src": "7683:172:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1882
              ],
              "body": {
                "id": 2097,
                "nodeType": "Block",
                "src": "8011:51:1",
                "statements": [
                  {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2091,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1982,
                          "src": "8028:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2093,
                        "indexExpression": {
                          "id": 2092,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2083,
                          "src": "8040:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8028:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2095,
                      "indexExpression": {
                        "id": 2094,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "8047:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8028:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 2090,
                    "id": 2096,
                    "nodeType": "Return",
                    "src": "8021:34:1"
                  }
                ]
              },
              "documentation": {
                "id": 2081,
                "nodeType": "StructuredDocumentation",
                "src": "7861:47:1",
                "text": " @dev See {IERC20-allowance}."
              },
              "functionSelector": "dd62ed3e",
              "id": 2098,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "allowance",
              "nameLocation": "7922:9:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2087,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "7984:8:1"
              },
              "parameters": {
                "id": 2086,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2083,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "7940:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2098,
                    "src": "7932:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2082,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7932:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2085,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "7955:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2098,
                    "src": "7947:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2084,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7947:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7931:32:1"
              },
              "returnParameters": {
                "id": 2090,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2089,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2098,
                    "src": "8002:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2088,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8002:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8001:9:1"
              },
              "scope": 2506,
              "src": "7913:149:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1892
              ],
              "body": {
                "id": 2118,
                "nodeType": "Block",
                "src": "8289:77:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2110,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "8308:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8308:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2112,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "8322:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2113,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2103,
                          "src": "8331:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2109,
                        "name": "_approve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2483,
                        "src": "8299:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8299:39:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2115,
                    "nodeType": "ExpressionStatement",
                    "src": "8299:39:1"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 2116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8355:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 2108,
                    "id": 2117,
                    "nodeType": "Return",
                    "src": "8348:11:1"
                  }
                ]
              },
              "documentation": {
                "id": 2099,
                "nodeType": "StructuredDocumentation",
                "src": "8068:127:1",
                "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
              },
              "functionSelector": "095ea7b3",
              "id": 2119,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "approve",
              "nameLocation": "8209:7:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2105,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "8265:8:1"
              },
              "parameters": {
                "id": 2104,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2101,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "8225:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2119,
                    "src": "8217:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2100,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8217:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2103,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "8242:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2119,
                    "src": "8234:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2102,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8234:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8216:33:1"
              },
              "returnParameters": {
                "id": 2108,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2107,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2119,
                    "src": "8283:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 2106,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8283:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8282:6:1"
              },
              "scope": 2506,
              "src": "8200:166:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                1904
              ],
              "body": {
                "id": 2166,
                "nodeType": "Block",
                "src": "8975:336:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2133,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2122,
                          "src": "8995:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2134,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2124,
                          "src": "9003:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2135,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2126,
                          "src": "9014:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2132,
                        "name": "_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2310,
                        "src": "8985:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8985:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2137,
                    "nodeType": "ExpressionStatement",
                    "src": "8985:36:1"
                  },
                  {
                    "assignments": [
                      2139
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2139,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "9040:16:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2166,
                        "src": "9032:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9032:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2146,
                    "initialValue": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2140,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1982,
                          "src": "9059:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2142,
                        "indexExpression": {
                          "id": 2141,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2122,
                          "src": "9071:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9059:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2145,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2143,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "9079:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9079:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9059:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9032:60:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2148,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2139,
                            "src": "9110:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2149,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2126,
                            "src": "9130:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9110:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9138:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                          },
                          "value": "ERC20: transfer amount exceeds allowance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                          }
                        ],
                        "id": 2147,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "9102:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9102:79:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2153,
                    "nodeType": "ExpressionStatement",
                    "src": "9102:79:1"
                  },
                  {
                    "id": 2163,
                    "nodeType": "UncheckedBlock",
                    "src": "9191:92:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2155,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2122,
                              "src": "9224:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2156,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1955,
                                "src": "9232:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9232:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2158,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2139,
                                "src": "9246:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2159,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2126,
                                "src": "9265:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9246:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2154,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2483,
                            "src": "9215:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9215:57:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2162,
                        "nodeType": "ExpressionStatement",
                        "src": "9215:57:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 2164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9300:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 2131,
                    "id": 2165,
                    "nodeType": "Return",
                    "src": "9293:11:1"
                  }
                ]
              },
              "documentation": {
                "id": 2120,
                "nodeType": "StructuredDocumentation",
                "src": "8372:456:1",
                "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
              },
              "functionSelector": "23b872dd",
              "id": 2167,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "transferFrom",
              "nameLocation": "8842:12:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2128,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "8951:8:1"
              },
              "parameters": {
                "id": 2127,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2122,
                    "mutability": "mutable",
                    "name": "sender",
                    "nameLocation": "8872:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2167,
                    "src": "8864:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2121,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8864:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2124,
                    "mutability": "mutable",
                    "name": "recipient",
                    "nameLocation": "8896:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2167,
                    "src": "8888:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2123,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8888:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2126,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "8923:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2167,
                    "src": "8915:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2125,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8915:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8854:81:1"
              },
              "returnParameters": {
                "id": 2131,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2130,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2167,
                    "src": "8969:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 2129,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8969:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8968:6:1"
              },
              "scope": 2506,
              "src": "8833:478:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2193,
                "nodeType": "Block",
                "src": "9800:118:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2178,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "9819:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9819:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2180,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2170,
                          "src": "9833:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2181,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1982,
                                "src": "9842:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2184,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2182,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1955,
                                  "src": "9854:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 2183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9854:12:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9842:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2186,
                            "indexExpression": {
                              "id": 2185,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2170,
                              "src": "9868:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9842:34:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2187,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2172,
                            "src": "9879:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9842:47:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2177,
                        "name": "_approve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2483,
                        "src": "9810:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9810:80:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2190,
                    "nodeType": "ExpressionStatement",
                    "src": "9810:80:1"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 2191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9907:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 2176,
                    "id": 2192,
                    "nodeType": "Return",
                    "src": "9900:11:1"
                  }
                ]
              },
              "documentation": {
                "id": 2168,
                "nodeType": "StructuredDocumentation",
                "src": "9317:384:1",
                "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
              },
              "functionSelector": "39509351",
              "id": 2194,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "increaseAllowance",
              "nameLocation": "9715:17:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2173,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2170,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "9741:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2194,
                    "src": "9733:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2169,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9733:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2172,
                    "mutability": "mutable",
                    "name": "addedValue",
                    "nameLocation": "9758:10:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2194,
                    "src": "9750:18:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2171,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9750:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "9732:37:1"
              },
              "returnParameters": {
                "id": 2176,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2175,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2194,
                    "src": "9794:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 2174,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "9794:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "9793:6:1"
              },
              "scope": 2506,
              "src": "9706:212:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2232,
                "nodeType": "Block",
                "src": "10504:306:1",
                "statements": [
                  {
                    "assignments": [
                      2205
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2205,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "10522:16:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2232,
                        "src": "10514:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10514:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2212,
                    "initialValue": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2206,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1982,
                          "src": "10541:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2209,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2207,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "10553:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10553:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10541:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2211,
                      "indexExpression": {
                        "id": 2210,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "10567:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10541:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10514:61:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2214,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2205,
                            "src": "10593:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2215,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2199,
                            "src": "10613:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10593:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                          "id": 2217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10630:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                            "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                          },
                          "value": "ERC20: decreased allowance below zero"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                            "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                          }
                        ],
                        "id": 2213,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "10585:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10585:85:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2219,
                    "nodeType": "ExpressionStatement",
                    "src": "10585:85:1"
                  },
                  {
                    "id": 2229,
                    "nodeType": "UncheckedBlock",
                    "src": "10680:102:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2221,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1955,
                                "src": "10713:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10713:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2223,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "10727:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2224,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2205,
                                "src": "10736:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2225,
                                "name": "subtractedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2199,
                                "src": "10755:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10736:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2220,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2483,
                            "src": "10704:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10704:67:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2228,
                        "nodeType": "ExpressionStatement",
                        "src": "10704:67:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10799:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 2203,
                    "id": 2231,
                    "nodeType": "Return",
                    "src": "10792:11:1"
                  }
                ]
              },
              "documentation": {
                "id": 2195,
                "nodeType": "StructuredDocumentation",
                "src": "9924:476:1",
                "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
              },
              "functionSelector": "a457c2d7",
              "id": 2233,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "decreaseAllowance",
              "nameLocation": "10414:17:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2200,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2197,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "10440:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2233,
                    "src": "10432:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2196,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10432:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2199,
                    "mutability": "mutable",
                    "name": "subtractedValue",
                    "nameLocation": "10457:15:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2233,
                    "src": "10449:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2198,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10449:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10431:42:1"
              },
              "returnParameters": {
                "id": 2203,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2202,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2233,
                    "src": "10498:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 2201,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "10498:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10497:6:1"
              },
              "scope": 2506,
              "src": "10405:405:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2309,
                "nodeType": "Block",
                "src": "11401:596:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2244,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "11419:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11437:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11429:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2245,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11429:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11429:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11419:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11441:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                            "typeString": "literal_string \"ERC20: transfer from the zero address\""
                          },
                          "value": "ERC20: transfer from the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                            "typeString": "literal_string \"ERC20: transfer from the zero address\""
                          }
                        ],
                        "id": 2243,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "11411:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11411:70:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2252,
                    "nodeType": "ExpressionStatement",
                    "src": "11411:70:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2254,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2238,
                            "src": "11499:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11520:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11512:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2255,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11512:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11512:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11499:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11524:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                            "typeString": "literal_string \"ERC20: transfer to the zero address\""
                          },
                          "value": "ERC20: transfer to the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                            "typeString": "literal_string \"ERC20: transfer to the zero address\""
                          }
                        ],
                        "id": 2253,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "11491:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11491:71:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2262,
                    "nodeType": "ExpressionStatement",
                    "src": "11491:71:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2264,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2236,
                          "src": "11594:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2265,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2238,
                          "src": "11602:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2266,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2240,
                          "src": "11613:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2263,
                        "name": "_beforeTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2494,
                        "src": "11573:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11573:47:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2268,
                    "nodeType": "ExpressionStatement",
                    "src": "11573:47:1"
                  },
                  {
                    "assignments": [
                      2270
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2270,
                        "mutability": "mutable",
                        "name": "senderBalance",
                        "nameLocation": "11639:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2309,
                        "src": "11631:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11631:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2274,
                    "initialValue": {
                      "baseExpression": {
                        "id": 2271,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1976,
                        "src": "11655:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2273,
                      "indexExpression": {
                        "id": 2272,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "11665:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11655:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11631:41:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2276,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2270,
                            "src": "11690:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2277,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2240,
                            "src": "11707:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11690:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 2279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11715:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "id": 2275,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "11682:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11682:74:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2281,
                    "nodeType": "ExpressionStatement",
                    "src": "11682:74:1"
                  },
                  {
                    "id": 2290,
                    "nodeType": "UncheckedBlock",
                    "src": "11766:77:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 2288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2282,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "11790:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2284,
                            "indexExpression": {
                              "id": 2283,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2236,
                              "src": "11800:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11790:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2285,
                              "name": "senderBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2270,
                              "src": "11810:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2286,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2240,
                              "src": "11826:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11810:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11790:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2289,
                        "nodeType": "ExpressionStatement",
                        "src": "11790:42:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "id": 2295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 2291,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1976,
                          "src": "11852:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2293,
                        "indexExpression": {
                          "id": 2292,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2238,
                          "src": "11862:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "11852:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 2294,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2240,
                        "src": "11876:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11852:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2296,
                    "nodeType": "ExpressionStatement",
                    "src": "11852:30:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 2298,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2236,
                          "src": "11907:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2299,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2238,
                          "src": "11915:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2300,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2240,
                          "src": "11926:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2297,
                        "name": "Transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "11898:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11898:35:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2302,
                    "nodeType": "EmitStatement",
                    "src": "11893:40:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2304,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2236,
                          "src": "11964:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2305,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2238,
                          "src": "11972:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2306,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2240,
                          "src": "11983:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2303,
                        "name": "_afterTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2505,
                        "src": "11944:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11944:46:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2308,
                    "nodeType": "ExpressionStatement",
                    "src": "11944:46:1"
                  }
                ]
              },
              "documentation": {
                "id": 2234,
                "nodeType": "StructuredDocumentation",
                "src": "10816:463:1",
                "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
              },
              "id": 2310,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_transfer",
              "nameLocation": "11293:9:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2241,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2236,
                    "mutability": "mutable",
                    "name": "sender",
                    "nameLocation": "11320:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2310,
                    "src": "11312:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2235,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11312:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2238,
                    "mutability": "mutable",
                    "name": "recipient",
                    "nameLocation": "11344:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2310,
                    "src": "11336:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2237,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11336:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2240,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "11371:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2310,
                    "src": "11363:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2239,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11363:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "11302:81:1"
              },
              "returnParameters": {
                "id": 2242,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "11401:0:1"
              },
              "scope": 2506,
              "src": "11284:713:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2365,
                "nodeType": "Block",
                "src": "12338:324:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2319,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2313,
                            "src": "12356:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12375:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12367:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2320,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12367:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12367:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12356:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                          "id": 2325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12379:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                            "typeString": "literal_string \"ERC20: mint to the zero address\""
                          },
                          "value": "ERC20: mint to the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                            "typeString": "literal_string \"ERC20: mint to the zero address\""
                          }
                        ],
                        "id": 2318,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "12348:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12348:65:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2327,
                    "nodeType": "ExpressionStatement",
                    "src": "12348:65:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12453:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12445:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2329,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12445:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12445:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2333,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2313,
                          "src": "12457:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2334,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2315,
                          "src": "12466:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2328,
                        "name": "_beforeTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2494,
                        "src": "12424:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12424:49:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2336,
                    "nodeType": "ExpressionStatement",
                    "src": "12424:49:1"
                  },
                  {
                    "expression": {
                      "id": 2339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2337,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "12484:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 2338,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2315,
                        "src": "12500:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12484:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2340,
                    "nodeType": "ExpressionStatement",
                    "src": "12484:22:1"
                  },
                  {
                    "expression": {
                      "id": 2345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 2341,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1976,
                          "src": "12516:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2343,
                        "indexExpression": {
                          "id": 2342,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2313,
                          "src": "12526:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "12516:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 2344,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2315,
                        "src": "12538:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12516:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2346,
                    "nodeType": "ExpressionStatement",
                    "src": "12516:28:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12576:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12568:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2348,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12568:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12568:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2352,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2313,
                          "src": "12580:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2353,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2315,
                          "src": "12589:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2347,
                        "name": "Transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "12559:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12559:37:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2355,
                    "nodeType": "EmitStatement",
                    "src": "12554:42:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12635:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12627:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2357,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12627:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12627:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2361,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2313,
                          "src": "12639:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2362,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2315,
                          "src": "12648:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2356,
                        "name": "_afterTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2505,
                        "src": "12607:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12607:48:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2364,
                    "nodeType": "ExpressionStatement",
                    "src": "12607:48:1"
                  }
                ]
              },
              "documentation": {
                "id": 2311,
                "nodeType": "StructuredDocumentation",
                "src": "12003:265:1",
                "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
              },
              "id": 2366,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_mint",
              "nameLocation": "12282:5:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2316,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2313,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "12296:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2366,
                    "src": "12288:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2312,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12288:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2315,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "12313:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2366,
                    "src": "12305:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2314,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12305:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "12287:33:1"
              },
              "returnParameters": {
                "id": 2317,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "12338:0:1"
              },
              "scope": 2506,
              "src": "12273:389:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2437,
                "nodeType": "Block",
                "src": "13047:511:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2375,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2369,
                            "src": "13065:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13084:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13076:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2376,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13076:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13076:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13065:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13088:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                            "typeString": "literal_string \"ERC20: burn from the zero address\""
                          },
                          "value": "ERC20: burn from the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                            "typeString": "literal_string \"ERC20: burn from the zero address\""
                          }
                        ],
                        "id": 2374,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "13057:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13057:67:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2383,
                    "nodeType": "ExpressionStatement",
                    "src": "13057:67:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2385,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2369,
                          "src": "13156:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13173:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13165:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2386,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13165:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13165:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2390,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2371,
                          "src": "13177:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2384,
                        "name": "_beforeTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2494,
                        "src": "13135:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13135:49:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2392,
                    "nodeType": "ExpressionStatement",
                    "src": "13135:49:1"
                  },
                  {
                    "assignments": [
                      2394
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2394,
                        "mutability": "mutable",
                        "name": "accountBalance",
                        "nameLocation": "13203:14:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2437,
                        "src": "13195:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13195:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2398,
                    "initialValue": {
                      "baseExpression": {
                        "id": 2395,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1976,
                        "src": "13220:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2397,
                      "indexExpression": {
                        "id": 2396,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2369,
                        "src": "13230:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13220:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13195:43:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2400,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2394,
                            "src": "13256:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2401,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2371,
                            "src": "13274:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13256:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 2403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13282:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "id": 2399,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "13248:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13248:71:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2405,
                    "nodeType": "ExpressionStatement",
                    "src": "13248:71:1"
                  },
                  {
                    "id": 2414,
                    "nodeType": "UncheckedBlock",
                    "src": "13329:79:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2406,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "13353:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2408,
                            "indexExpression": {
                              "id": 2407,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2369,
                              "src": "13363:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13353:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2409,
                              "name": "accountBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2394,
                              "src": "13374:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2410,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2371,
                              "src": "13391:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13374:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13353:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2413,
                        "nodeType": "ExpressionStatement",
                        "src": "13353:44:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "id": 2417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2415,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "13417:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "-=",
                      "rightHandSide": {
                        "id": 2416,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2371,
                        "src": "13433:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13417:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2418,
                    "nodeType": "ExpressionStatement",
                    "src": "13417:22:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 2420,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2369,
                          "src": "13464:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13481:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13473:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2421,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13473:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13473:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2425,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2371,
                          "src": "13485:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2419,
                        "name": "Transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "13455:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13455:37:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2427,
                    "nodeType": "EmitStatement",
                    "src": "13450:42:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2429,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2369,
                          "src": "13523:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13540:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13532:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2430,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13532:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13532:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2434,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2371,
                          "src": "13544:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2428,
                        "name": "_afterTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2505,
                        "src": "13503:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13503:48:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2436,
                    "nodeType": "ExpressionStatement",
                    "src": "13503:48:1"
                  }
                ]
              },
              "documentation": {
                "id": 2367,
                "nodeType": "StructuredDocumentation",
                "src": "12668:309:1",
                "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
              },
              "id": 2438,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_burn",
              "nameLocation": "12991:5:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2372,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2369,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "13005:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2438,
                    "src": "12997:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2368,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12997:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2371,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "13022:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2438,
                    "src": "13014:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2370,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13014:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "12996:33:1"
              },
              "returnParameters": {
                "id": 2373,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "13047:0:1"
              },
              "scope": 2506,
              "src": "12982:576:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2482,
                "nodeType": "Block",
                "src": "14094:257:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2449,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2441,
                            "src": "14112:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14129:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14121:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2450,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14121:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14121:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14112:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                          "id": 2455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14133:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                            "typeString": "literal_string \"ERC20: approve from the zero address\""
                          },
                          "value": "ERC20: approve from the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                            "typeString": "literal_string \"ERC20: approve from the zero address\""
                          }
                        ],
                        "id": 2448,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "14104:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14104:68:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2457,
                    "nodeType": "ExpressionStatement",
                    "src": "14104:68:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2459,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2443,
                            "src": "14190:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14209:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14201:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2460,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14201:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14201:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14190:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                          "id": 2465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14213:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                            "typeString": "literal_string \"ERC20: approve to the zero address\""
                          },
                          "value": "ERC20: approve to the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                            "typeString": "literal_string \"ERC20: approve to the zero address\""
                          }
                        ],
                        "id": 2458,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "14182:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14182:68:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2467,
                    "nodeType": "ExpressionStatement",
                    "src": "14182:68:1"
                  },
                  {
                    "expression": {
                      "id": 2474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2468,
                            "name": "_allowances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "14261:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 2471,
                          "indexExpression": {
                            "id": 2469,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2441,
                            "src": "14273:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14261:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2472,
                        "indexExpression": {
                          "id": 2470,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2443,
                          "src": "14280:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "14261:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2473,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "14291:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14261:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2475,
                    "nodeType": "ExpressionStatement",
                    "src": "14261:36:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 2477,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2441,
                          "src": "14321:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2478,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2443,
                          "src": "14328:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2479,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2445,
                          "src": "14337:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2476,
                        "name": "Approval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1922,
                        "src": "14312:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 2480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14312:32:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2481,
                    "nodeType": "EmitStatement",
                    "src": "14307:37:1"
                  }
                ]
              },
              "documentation": {
                "id": 2439,
                "nodeType": "StructuredDocumentation",
                "src": "13564:412:1",
                "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
              },
              "id": 2483,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_approve",
              "nameLocation": "13990:8:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2446,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2441,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "14016:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2483,
                    "src": "14008:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2440,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14008:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2443,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "14039:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2483,
                    "src": "14031:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2442,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14031:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2445,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "14064:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2483,
                    "src": "14056:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14056:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "13998:78:1"
              },
              "returnParameters": {
                "id": 2447,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "14094:0:1"
              },
              "scope": 2506,
              "src": "13981:370:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2493,
                "nodeType": "Block",
                "src": "15054:2:1",
                "statements": []
              },
              "documentation": {
                "id": 2484,
                "nodeType": "StructuredDocumentation",
                "src": "14357:573:1",
                "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
              },
              "id": 2494,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_beforeTokenTransfer",
              "nameLocation": "14944:20:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2491,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2486,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "14982:4:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2494,
                    "src": "14974:12:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2485,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14974:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2488,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "15004:2:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2494,
                    "src": "14996:10:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2487,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14996:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2490,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "15024:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2494,
                    "src": "15016:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2489,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15016:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "14964:72:1"
              },
              "returnParameters": {
                "id": 2492,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "15054:0:1"
              },
              "scope": 2506,
              "src": "14935:121:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2504,
                "nodeType": "Block",
                "src": "15762:2:1",
                "statements": []
              },
              "documentation": {
                "id": 2495,
                "nodeType": "StructuredDocumentation",
                "src": "15062:577:1",
                "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
              },
              "id": 2505,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_afterTokenTransfer",
              "nameLocation": "15653:19:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2502,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2497,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "15690:4:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2505,
                    "src": "15682:12:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2496,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15682:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2499,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "15712:2:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2505,
                    "src": "15704:10:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2498,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15704:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2501,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "15732:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2505,
                    "src": "15724:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2500,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15724:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "15672:72:1"
              },
              "returnParameters": {
                "id": 2503,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "15762:0:1"
              },
              "scope": 2506,
              "src": "15644:120:1",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            }
          ],
          "scope": 2589,
          "src": "5350:10416:1",
          "usedErrors": []
        },
        {
          "abstract": true,
          "baseContracts": [
            {
              "baseName": {
                "id": 2508,
                "name": "ERC20",
                "nameLocations": [
                  "15936:5:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2506,
                "src": "15936:5:1"
              },
              "id": 2509,
              "nodeType": "InheritanceSpecifier",
              "src": "15936:5:1"
            }
          ],
          "canonicalName": "ERC20Decimals",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 2507,
            "nodeType": "StructuredDocumentation",
            "src": "15770:130:1",
            "text": " @title ERC20Decimals\n @dev Implementation of the ERC20Decimals. Extension of {ERC20} that adds decimals storage slot."
          },
          "fullyImplemented": false,
          "id": 2532,
          "linearizedBaseContracts": [
            2532,
            2506,
            1945,
            1923,
            1965
          ],
          "name": "ERC20Decimals",
          "nameLocation": "15919:13:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 2511,
              "mutability": "immutable",
              "name": "_decimals",
              "nameLocation": "15972:9:1",
              "nodeType": "VariableDeclaration",
              "scope": 2532,
              "src": "15948:33:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              },
              "typeName": {
                "id": 2510,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "15948:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "visibility": "private"
            },
            {
              "body": {
                "id": 2521,
                "nodeType": "Block",
                "src": "16156:38:1",
                "statements": [
                  {
                    "expression": {
                      "id": 2519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2517,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2511,
                        "src": "16166:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2518,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "16178:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "16166:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 2520,
                    "nodeType": "ExpressionStatement",
                    "src": "16166:21:1"
                  }
                ]
              },
              "documentation": {
                "id": 2512,
                "nodeType": "StructuredDocumentation",
                "src": "15988:134:1",
                "text": " @dev Sets the value of the `decimals`. This value is immutable, it can only be\n set once during construction."
              },
              "id": 2522,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2515,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2514,
                    "mutability": "mutable",
                    "name": "decimals_",
                    "nameLocation": "16145:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2522,
                    "src": "16139:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 2513,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "16139:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16138:17:1"
              },
              "returnParameters": {
                "id": 2516,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16156:0:1"
              },
              "scope": 2532,
              "src": "16127:67:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "baseFunctions": [
                2035
              ],
              "body": {
                "id": 2530,
                "nodeType": "Block",
                "src": "16265:33:1",
                "statements": [
                  {
                    "expression": {
                      "id": 2528,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2511,
                      "src": "16282:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "functionReturnParameters": 2527,
                    "id": 2529,
                    "nodeType": "Return",
                    "src": "16275:16:1"
                  }
                ]
              },
              "functionSelector": "313ce567",
              "id": 2531,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nameLocation": "16209:8:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2524,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "16240:8:1"
              },
              "parameters": {
                "id": 2523,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16217:2:1"
              },
              "returnParameters": {
                "id": 2527,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2526,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2531,
                    "src": "16258:5:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 2525,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "16258:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16257:7:1"
              },
              "scope": 2532,
              "src": "16200:98:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            }
          ],
          "scope": 2589,
          "src": "15901:399:1",
          "usedErrors": []
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 2534,
                "name": "ERC20Decimals",
                "nameLocations": [
                  "16405:13:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2532,
                "src": "16405:13:1"
              },
              "id": 2535,
              "nodeType": "InheritanceSpecifier",
              "src": "16405:13:1"
            }
          ],
          "canonicalName": "StandardERC20",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 2533,
            "nodeType": "StructuredDocumentation",
            "src": "16303:75:1",
            "text": " @title StandardERC20\n @dev Implementation of the StandardERC20"
          },
          "fullyImplemented": true,
          "id": 2588,
          "linearizedBaseContracts": [
            2588,
            2532,
            2506,
            1945,
            1923,
            1965
          ],
          "name": "StandardERC20",
          "nameLocation": "16388:13:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "body": {
                "id": 2545,
                "nodeType": "Block",
                "src": "16502:7:1",
                "statements": []
              },
              "id": 2546,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [
                {
                  "arguments": [
                    {
                      "hexValue": "5341544f5348495320564953494f4e",
                      "id": 2538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16458:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_76848b91a0d77b247e168e62762d6511350aa36f09462733da9f980d6ce75cee",
                        "typeString": "literal_string \"SATOSHIS VISION\""
                      },
                      "value": "SATOSHIS VISION"
                    },
                    {
                      "hexValue": "53415453",
                      "id": 2539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16477:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_9f1da6e9342a2d295f7624c950153c4b16d33867bf038778c75010012c28c5c5",
                        "typeString": "literal_string \"SATS\""
                      },
                      "value": "SATS"
                    }
                  ],
                  "id": 2540,
                  "kind": "baseConstructorSpecifier",
                  "modifierName": {
                    "id": 2537,
                    "name": "ERC20",
                    "nameLocations": [
                      "16452:5:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2506,
                    "src": "16452:5:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "16452:32:1"
                },
                {
                  "arguments": [
                    {
                      "hexValue": "39",
                      "id": 2542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16499:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9_by_1",
                        "typeString": "int_const 9"
                      },
                      "value": "9"
                    }
                  ],
                  "id": 2543,
                  "kind": "baseConstructorSpecifier",
                  "modifierName": {
                    "id": 2541,
                    "name": "ERC20Decimals",
                    "nameLocations": [
                      "16485:13:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2532,
                    "src": "16485:13:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "16485:16:1"
                }
              ],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2536,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16436:7:1"
              },
              "returnParameters": {
                "id": 2544,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16502:0:1"
              },
              "scope": 2588,
              "src": "16425:84:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                2531
              ],
              "body": {
                "id": 2556,
                "nodeType": "Block",
                "src": "16580:40:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2552,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "16597:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_StandardERC20_$2588_$",
                            "typeString": "type(contract super StandardERC20)"
                          }
                        },
                        "id": 2553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16603:8:1",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2531,
                        "src": "16597:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                          "typeString": "function () view returns (uint8)"
                        }
                      },
                      "id": 2554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16597:16:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "functionReturnParameters": 2551,
                    "id": 2555,
                    "nodeType": "Return",
                    "src": "16590:23:1"
                  }
                ]
              },
              "functionSelector": "313ce567",
              "id": 2557,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nameLocation": "16524:8:1",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2548,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "16555:8:1"
              },
              "parameters": {
                "id": 2547,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16532:2:1"
              },
              "returnParameters": {
                "id": 2551,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2550,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2557,
                    "src": "16573:5:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 2549,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "16573:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16572:7:1"
              },
              "scope": 2588,
              "src": "16515:105:1",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2573,
                "nodeType": "Block",
                "src": "16676:67:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2569,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16725:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16729:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16725:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2565,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16708:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StandardERC20_$2588",
                                    "typeString": "contract StandardERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StandardERC20_$2588",
                                    "typeString": "contract StandardERC20"
                                  }
                                ],
                                "id": 2564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16700:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2563,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16700:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16700:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2562,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1923,
                            "src": "16693:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1923_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 2567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16693:21:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1923",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16715:9:1",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1862,
                        "src": "16693:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16693:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 2561,
                    "id": 2572,
                    "nodeType": "Return",
                    "src": "16686:50:1"
                  }
                ]
              },
              "functionSelector": "c71daccb",
              "id": 2574,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "checkBalance",
              "nameLocation": "16634:12:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2558,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16646:2:1"
              },
              "returnParameters": {
                "id": 2561,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2560,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2574,
                    "src": "16671:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2559,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "16671:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16670:6:1"
              },
              "scope": 2588,
              "src": "16625:118:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2586,
                "nodeType": "Block",
                "src": "16783:41:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2580,
                          "name": "_r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2576,
                          "src": "16799:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030303030",
                            "id": 2581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16803:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1000000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "316539",
                            "id": 2582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16813:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1e9"
                          },
                          "src": "16803:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          }
                        ],
                        "id": 2579,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "16793:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 2584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16793:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2585,
                    "nodeType": "ExpressionStatement",
                    "src": "16793:24:1"
                  }
                ]
              },
              "functionSelector": "6a627842",
              "id": 2587,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "mint",
              "nameLocation": "16757:4:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2577,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2576,
                    "mutability": "mutable",
                    "name": "_r",
                    "nameLocation": "16770:2:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2587,
                    "src": "16762:10:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2575,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "16762:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16761:12:1"
              },
              "returnParameters": {
                "id": 2578,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16783:0:1"
              },
              "scope": 2588,
              "src": "16748:76:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 2589,
          "src": "16379:447:1",
          "usedErrors": []
        }
      ],
      "src": "32:16794:1"
    },
    "bytecode": "600f60a09081526e29a0aa27a9a424a9902b24a9a4a7a760891b60c052610120604052600460e0908152635341545360e01b610100526009919060036200004783826200010a565b5060046200005682826200010a565b50505060ff16608052620001d6565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200009057607f821691505b602082108103620000b157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200010557600081815260208120601f850160051c81016020861015620000e05750805b601f850160051c820191505b818110156200010157828155600101620000ec565b5050505b505050565b81516001600160401b0381111562000126576200012662000065565b6200013e816200013784546200007b565b84620000b7565b602080601f8311600181146200017657600084156200015d5750858301515b600019600386901b1c1916600185901b17855562000101565b600085815260208120601f198616915b82811015620001a75788860151825594840194600190910190840162000186565b5085821015620001c65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610a90620001f260003960006101410152610a906000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636a6278421161008c578063a457c2d711610066578063a457c2d7146101c4578063a9059cbb146101d7578063c71daccb146101ea578063dd62ed3e146101f257600080fd5b80636a6278421461017e57806370a082311461019357806395d89b41146101bc57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461016b575b600080fd5b6100dc61022b565b6040516100e991906108c1565b60405180910390f35b61010561010036600461092b565b6102bd565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610955565b6102d4565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100e9565b61010561017936600461092b565b610388565b61019161018c366004610991565b6103c4565b005b6101196101a1366004610991565b6001600160a01b031660009081526020819052604090205490565b6100dc6103d8565b6101056101d236600461092b565b6103e7565b6101056101e536600461092b565b610480565b61011961048d565b6101196102003660046109b3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461023a906109e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610266906109e6565b80156102b35780601f10610288576101008083540402835291602001916102b3565b820191906000526020600020905b81548152906001019060200180831161029657829003601f168201915b5050505050905090565b60006102ca3384846104ef565b5060015b92915050565b60006102e1848484610613565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561036b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61037885338584036104ef565b506001949350505050565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102ca9185906103bf908690610a20565b6104ef565b6103d58166038d7ea4c680006107e2565b50565b60606004805461023a906109e6565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104695760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610362565b61047633858584036104ef565b5060019392505050565b60006102ca338484610613565b6040516370a0823160e01b815233600482015260009030906370a0823190602401602060405180830381865afa1580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190610a41565b6001600160a01b0383166105515760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610362565b6001600160a01b0382166105b25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610362565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610362565b6001600160a01b0382166106d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610362565b6001600160a01b038316600090815260208190526040902054818110156107515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610362565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610788908490610a20565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d491815260200190565b60405180910390a350505050565b6001600160a01b0382166108385760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610362565b806002600082825461084a9190610a20565b90915550506001600160a01b03821660009081526020819052604081208054839290610877908490610a20565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156108ee578581018301518582016040015282016108d2565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461092657600080fd5b919050565b6000806040838503121561093e57600080fd5b6109478361090f565b946020939093013593505050565b60008060006060848603121561096a57600080fd5b6109738461090f565b92506109816020850161090f565b9150604084013590509250925092565b6000602082840312156109a357600080fd5b6109ac8261090f565b9392505050565b600080604083850312156109c657600080fd5b6109cf8361090f565b91506109dd6020840161090f565b90509250929050565b600181811c908216806109fa57607f821691505b602082108103610a1a57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ce57634e487b7160e01b600052601160045260246000fd5b600060208284031215610a5357600080fd5b505191905056fea26469706673582212209828096e9cdd2a5e1073b51584e8a6460cdad22db25ec77e5359cb463bf2cc6c64736f6c63430008120033",
    "bytecodeSha1": "6f8195d2e52773f1e99c8be7888779a67d4a136e",
    "compiler": {
      "evm_version": "istanbul",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "version": "0.8.18+commit.87f61d96"
    },
    "contractName": "StandardERC20",
    "coverageMap": {
      "branches": {
        "1": {
          "ERC20._approve": {
            "37": [
              14112,
              14131,
              true
            ],
            "38": [
              14190,
              14211,
              true
            ]
          },
          "ERC20._mint": {
            "42": [
              12356,
              12377,
              true
            ]
          },
          "ERC20._transfer": {
            "39": [
              11419,
              11439,
              true
            ],
            "40": [
              11499,
              11522,
              true
            ],
            "41": [
              11690,
              11713,
              true
            ]
          },
          "ERC20.decreaseAllowance": {
            "36": [
              10593,
              10628,
              true
            ]
          },
          "ERC20.transferFrom": {
            "35": [
              9110,
              9136,
              true
            ]
          }
        }
      },
      "statements": {
        "1": {
          "Context._msgSender": {
            "6": [
              3984,
              4001
            ]
          },
          "ERC20._approve": {
            "21": [
              14104,
              14172
            ],
            "22": [
              14182,
              14250
            ],
            "23": [
              14261,
              14297
            ],
            "24": [
              14307,
              14344
            ]
          },
          "ERC20._mint": {
            "31": [
              12348,
              12413
            ],
            "32": [
              12484,
              12506
            ],
            "33": [
              12516,
              12544
            ],
            "34": [
              12554,
              12596
            ]
          },
          "ERC20._transfer": {
            "25": [
              11411,
              11481
            ],
            "26": [
              11491,
              11562
            ],
            "27": [
              11682,
              11756
            ],
            "28": [
              11790,
              11832
            ],
            "29": [
              11852,
              11882
            ],
            "30": [
              11893,
              11933
            ]
          },
          "ERC20.allowance": {
            "3": [
              8021,
              8055
            ]
          },
          "ERC20.approve": {
            "5": [
              8299,
              8338
            ],
            "7": [
              8348,
              8359
            ]
          },
          "ERC20.balanceOf": {
            "2": [
              7448,
              7473
            ]
          },
          "ERC20.decreaseAllowance": {
            "16": [
              10585,
              10670
            ],
            "17": [
              10704,
              10771
            ],
            "18": [
              10792,
              10803
            ]
          },
          "ERC20.increaseAllowance": {
            "13": [
              9810,
              9890
            ]
          },
          "ERC20.name": {
            "4": [
              6182,
              6194
            ]
          },
          "ERC20.symbol": {
            "15": [
              6395,
              6409
            ]
          },
          "ERC20.totalSupply": {
            "0": [
              7271,
              7290
            ]
          },
          "ERC20.transfer": {
            "19": [
              7785,
              7827
            ]
          },
          "ERC20.transferFrom": {
            "8": [
              8985,
              9021
            ],
            "9": [
              9102,
              9181
            ],
            "10": [
              9215,
              9272
            ],
            "11": [
              9293,
              9304
            ]
          },
          "ERC20Decimals.decimals": {
            "1": [
              16275,
              16291
            ]
          },
          "StandardERC20.checkBalance": {
            "20": [
              16686,
              16736
            ]
          },
          "StandardERC20.decimals": {
            "12": [
              16590,
              16613
            ]
          },
          "StandardERC20.mint": {
            "14": [
              16793,
              16817
            ]
          }
        }
      }
    },
    "dependencies": [
      "Context",
      "ERC20",
      "ERC20Decimals",
      "IERC20",
      "IERC20Metadata"
    ],
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636a6278421161008c578063a457c2d711610066578063a457c2d7146101c4578063a9059cbb146101d7578063c71daccb146101ea578063dd62ed3e146101f257600080fd5b80636a6278421461017e57806370a082311461019357806395d89b41146101bc57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461016b575b600080fd5b6100dc61022b565b6040516100e991906108c1565b60405180910390f35b61010561010036600461092b565b6102bd565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610955565b6102d4565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100e9565b61010561017936600461092b565b610388565b61019161018c366004610991565b6103c4565b005b6101196101a1366004610991565b6001600160a01b031660009081526020819052604090205490565b6100dc6103d8565b6101056101d236600461092b565b6103e7565b6101056101e536600461092b565b610480565b61011961048d565b6101196102003660046109b3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461023a906109e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610266906109e6565b80156102b35780601f10610288576101008083540402835291602001916102b3565b820191906000526020600020905b81548152906001019060200180831161029657829003601f168201915b5050505050905090565b60006102ca3384846104ef565b5060015b92915050565b60006102e1848484610613565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561036b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61037885338584036104ef565b506001949350505050565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102ca9185906103bf908690610a20565b6104ef565b6103d58166038d7ea4c680006107e2565b50565b60606004805461023a906109e6565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104695760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610362565b61047633858584036104ef565b5060019392505050565b60006102ca338484610613565b6040516370a0823160e01b815233600482015260009030906370a0823190602401602060405180830381865afa1580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190610a41565b6001600160a01b0383166105515760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610362565b6001600160a01b0382166105b25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610362565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610362565b6001600160a01b0382166106d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610362565b6001600160a01b038316600090815260208190526040902054818110156107515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610362565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610788908490610a20565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d491815260200190565b60405180910390a350505050565b6001600160a01b0382166108385760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610362565b806002600082825461084a9190610a20565b90915550506001600160a01b03821660009081526020819052604081208054839290610877908490610a20565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156108ee578581018301518582016040015282016108d2565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461092657600080fd5b919050565b6000806040838503121561093e57600080fd5b6109478361090f565b946020939093013593505050565b60008060006060848603121561096a57600080fd5b6109738461090f565b92506109816020850161090f565b9150604084013590509250925092565b6000602082840312156109a357600080fd5b6109ac8261090f565b9392505050565b600080604083850312156109c657600080fd5b6109cf8361090f565b91506109dd6020840161090f565b90509250929050565b600181811c908216806109fa57607f821691505b602082108103610a1a57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ce57634e487b7160e01b600052601160045260246000fd5b600060208284031215610a5357600080fd5b505191905056fea26469706673582212209828096e9cdd2a5e1073b51584e8a6460cdad22db25ec77e5359cb463bf2cc6c64736f6c63430008120033",
    "deployedSourceMap": "16379:447:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6103:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8200:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:2;;1162:22;1144:41;;1132:2;1117:18;8200:166:1;1004:187:2;7191:106:1;7278:12;;7191:106;;;1342:25:2;;;1330:2;1315:18;7191:106:1;1196:177:2;8833:478:1;;;;;;:::i;:::-;;:::i;16515:105::-;;;1883:4:2;16282:9:1;1871:17:2;1853:36;;1841:2;1826:18;16515:105:1;1711:184:2;9706:212:1;;;;;;:::i;:::-;;:::i;16748:76::-;;;;;;:::i;:::-;;:::i;:::-;;7355:125;;;;;;:::i;:::-;-1:-1:-1;;;;;7455:18:1;7429:7;7455:18;;;;;;;;;;;;7355:125;6314:102;;;:::i;10405:405::-;;;;;;:::i;:::-;;:::i;7683:172::-;;;;;;:::i;:::-;;:::i;16625:118::-;;;:::i;7913:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8028:18:1;;;8002:7;8028:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;7913:149;6103:98;6157:13;6189:5;6182:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6103:98;:::o;8200:166::-;8283:4;8299:39;3991:10;8322:7;8331:6;8299:8;:39::i;:::-;-1:-1:-1;8355:4:1;8200:166;;;;;:::o;8833:478::-;8969:4;8985:36;8995:6;9003:9;9014:6;8985:9;:36::i;:::-;-1:-1:-1;;;;;9059:19:1;;9032:24;9059:19;;;:11;:19;;;;;;;;3991:10;9059:33;;;;;;;;9110:26;;;;9102:79;;;;-1:-1:-1;;;9102:79:1;;2943:2:2;9102:79:1;;;2925:21:2;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:2;;;3065:38;3120:19;;9102:79:1;;;;;;;;;9215:57;9224:6;3991:10;9265:6;9246:16;:25;9215:8;:57::i;:::-;-1:-1:-1;9300:4:1;;8833:478;-1:-1:-1;;;;8833:478:1:o;16597:16::-;16590:23;;16515:105;:::o;9706:212::-;3991:10;9794:4;9842:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;9842:34:1;;;;;;;;;;9794:4;;9810:80;;9833:7;;9842:47;;9879:10;;9842:47;:::i;:::-;9810:8;:80::i;16748:76::-;16793:24;16799:2;16803:13;16793:5;:24::i;:::-;16748:76;:::o;6314:102::-;6370:13;6402:7;6395:14;;;;;:::i;10405:405::-;3991:10;10498:4;10541:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10541:34:1;;;;;;;;;;10593:35;;;;10585:85;;;;-1:-1:-1;;;10585:85:1;;3579:2:2;10585:85:1;;;3561:21:2;3618:2;3598:18;;;3591:30;3657:34;3637:18;;;3630:62;-1:-1:-1;;;3708:18:2;;;3701:35;3753:19;;10585:85:1;3377:401:2;10585:85:1;10704:67;3991:10;10727:7;10755:15;10736:16;:34;10704:8;:67::i;:::-;-1:-1:-1;10799:4:1;;10405:405;-1:-1:-1;;;10405:405:1:o;7683:172::-;7769:4;7785:42;3991:10;7809:9;7820:6;7785:9;:42::i;16625:118::-;16693:43;;-1:-1:-1;;;16693:43:1;;16725:10;16693:43;;;3929:51:2;16671:4:1;;16708;;16693:31;;3902:18:2;;16693:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13981:370::-;-1:-1:-1;;;;;14112:19:1;;14104:68;;;;-1:-1:-1;;;14104:68:1;;4382:2:2;14104:68:1;;;4364:21:2;4421:2;4401:18;;;4394:30;4460:34;4440:18;;;4433:62;-1:-1:-1;;;4511:18:2;;;4504:34;4555:19;;14104:68:1;4180:400:2;14104:68:1;-1:-1:-1;;;;;14190:21:1;;14182:68;;;;-1:-1:-1;;;14182:68:1;;4787:2:2;14182:68:1;;;4769:21:2;4826:2;4806:18;;;4799:30;4865:34;4845:18;;;4838:62;-1:-1:-1;;;4916:18:2;;;4909:32;4958:19;;14182:68:1;4585:398:2;14182:68:1;-1:-1:-1;;;;;14261:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14312:32;;1342:25:2;;;14312:32:1;;1315:18:2;14312:32:1;;;;;;;13981:370;;;:::o;11284:713::-;-1:-1:-1;;;;;11419:20:1;;11411:70;;;;-1:-1:-1;;;11411:70:1;;5190:2:2;11411:70:1;;;5172:21:2;5229:2;5209:18;;;5202:30;5268:34;5248:18;;;5241:62;-1:-1:-1;;;5319:18:2;;;5312:35;5364:19;;11411:70:1;4988:401:2;11411:70:1;-1:-1:-1;;;;;11499:23:1;;11491:71;;;;-1:-1:-1;;;11491:71:1;;5596:2:2;11491:71:1;;;5578:21:2;5635:2;5615:18;;;5608:30;5674:34;5654:18;;;5647:62;-1:-1:-1;;;5725:18:2;;;5718:33;5768:19;;11491:71:1;5394:399:2;11491:71:1;-1:-1:-1;;;;;11655:17:1;;11631:21;11655:17;;;;;;;;;;;11690:23;;;;11682:74;;;;-1:-1:-1;;;11682:74:1;;6000:2:2;11682:74:1;;;5982:21:2;6039:2;6019:18;;;6012:30;6078:34;6058:18;;;6051:62;-1:-1:-1;;;6129:18:2;;;6122:36;6175:19;;11682:74:1;5798:402:2;11682:74:1;-1:-1:-1;;;;;11790:17:1;;;:9;:17;;;;;;;;;;;11810:22;;;11790:42;;11852:20;;;;;;;;:30;;11826:6;;11790:9;11852:30;;11826:6;;11852:30;:::i;:::-;;;;;;;;11915:9;-1:-1:-1;;;;;11898:35:1;11907:6;-1:-1:-1;;;;;11898:35:1;;11926:6;11898:35;;;;1342:25:2;;1330:2;1315:18;;1196:177;11898:35:1;;;;;;;;11401:596;11284:713;;;:::o;12273:389::-;-1:-1:-1;;;;;12356:21:1;;12348:65;;;;-1:-1:-1;;;12348:65:1;;6407:2:2;12348:65:1;;;6389:21:2;6446:2;6426:18;;;6419:30;6485:33;6465:18;;;6458:61;6536:18;;12348:65:1;6205:355:2;12348:65:1;12500:6;12484:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;12516:18:1;;:9;:18;;;;;;;;;;:28;;12538:6;;12516:9;:28;;12538:6;;12516:28;:::i;:::-;;;;-1:-1:-1;;12559:37:1;;1342:25:2;;;-1:-1:-1;;;;;12559:37:1;;;12576:1;;12559:37;;1330:2:2;1315:18;12559:37:1;;;;;;;12273:389;;:::o;14:548:2:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:2;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:2:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:2:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:222::-;3215:9;;;3236:10;;;3233:133;;;3288:10;3283:3;3279:20;3276:1;3269:31;3323:4;3320:1;3313:15;3351:4;3348:1;3341:15;3991:184;4061:6;4114:2;4102:9;4093:7;4089:23;4085:32;4082:52;;;4130:1;4127;4120:12;4082:52;-1:-1:-1;4153:16:2;;3991:184;-1:-1:-1;3991:184:2:o",
    "language": "Solidity",
    "natspec": {
      "details": "Implementation of the StandardERC20",
      "events": {
        "Approval(address,address,uint256)": {
          "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
        },
        "Transfer(address,address,uint256)": {
          "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
        }
      },
      "kind": "dev",
      "methods": {
        "allowance(address,address)": {
          "details": "See {IERC20-allowance}."
        },
        "approve(address,uint256)": {
          "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
        },
        "balanceOf(address)": {
          "details": "See {IERC20-balanceOf}."
        },
        "decimals()": {
          "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
        },
        "decreaseAllowance(address,uint256)": {
          "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
        },
        "increaseAllowance(address,uint256)": {
          "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
        },
        "name()": {
          "details": "Returns the name of the token."
        },
        "symbol()": {
          "details": "Returns the symbol of the token, usually a shorter version of the name."
        },
        "totalSupply()": {
          "details": "See {IERC20-totalSupply}."
        },
        "transfer(address,uint256)": {
          "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
        },
        "transferFrom(address,address,uint256)": {
          "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
        }
      },
      "title": "StandardERC20",
      "version": 1
    },
    "offset": [
      16379,
      16826
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xC71DACCB EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x991 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x119 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x23A SWAP1 PUSH2 0x9E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x266 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x288 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x296 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA CALLER DUP5 DUP5 PUSH2 0x4EF JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1 DUP5 DUP5 DUP5 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x378 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x4EF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2CA SWAP2 DUP6 SWAP1 PUSH2 0x3BF SWAP1 DUP7 SWAP1 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH7 0x38D7EA4C68000 PUSH2 0x7E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x23A SWAP1 PUSH2 0x9E6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x476 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x4EF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA CALLER DUP5 DUP5 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x788 SWAP1 DUP5 SWAP1 PUSH2 0xA20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x84A SWAP2 SWAP1 PUSH2 0xA20 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x877 SWAP1 DUP5 SWAP1 PUSH2 0xA20 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8EE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8D2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x947 DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x973 DUP5 PUSH2 0x90F JUMP JUMPDEST SWAP3 POP PUSH2 0x981 PUSH1 0x20 DUP6 ADD PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AC DUP3 PUSH2 0x90F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9CF DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH2 0x9DD PUSH1 0x20 DUP5 ADD PUSH2 0x90F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9FA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA1A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x28 MULMOD PUSH15 0x9CDD2A5E1073B51584E8A6460CDAD2 0x2D 0xB2 0x5E 0xC7 PUSH31 0x5359CB463BF2CC6C64736F6C63430008120033000000000000000000000000 ",
    "pcMap": {
      "0": {
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x80"
      },
      "2": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "6": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "8": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10"
      },
      "11": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "12": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "14": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "15": {
        "dev": "Cannot send ether to nonpayable function",
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "REVERT",
        "path": "1"
      },
      "16": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "17": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "POP",
        "path": "1"
      },
      "18": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "20": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "21": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "LT",
        "path": "1"
      },
      "22": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xCF"
      },
      "25": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "26": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "28": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "CALLDATALOAD",
        "path": "1"
      },
      "29": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xE0"
      },
      "31": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "SHR",
        "path": "1"
      },
      "32": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "33": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x6A627842"
      },
      "38": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "GT",
        "path": "1"
      },
      "39": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x8C"
      },
      "42": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "43": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "44": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA457C2D7"
      },
      "49": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "GT",
        "path": "1"
      },
      "50": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x66"
      },
      "53": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "54": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "55": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA457C2D7"
      },
      "60": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "61": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1C4"
      },
      "64": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "65": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "66": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA9059CBB"
      },
      "71": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "72": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D7"
      },
      "75": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "76": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "77": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xC71DACCB"
      },
      "82": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "83": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1EA"
      },
      "86": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "87": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "88": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xDD62ED3E"
      },
      "93": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "94": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1F2"
      },
      "97": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "98": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "100": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "101": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "REVERT",
        "path": "1"
      },
      "102": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "103": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "104": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x6A627842"
      },
      "109": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "110": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x17E"
      },
      "113": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "114": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "115": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x70A08231"
      },
      "120": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "121": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x193"
      },
      "124": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "125": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "126": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x95D89B41"
      },
      "131": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "132": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1BC"
      },
      "135": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "136": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "138": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "139": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "REVERT",
        "path": "1"
      },
      "140": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "141": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "142": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x6FDDE03"
      },
      "147": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "148": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xD4"
      },
      "151": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "152": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "153": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x95EA7B3"
      },
      "158": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "159": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xF2"
      },
      "162": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "163": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "164": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x18160DDD"
      },
      "169": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "170": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x115"
      },
      "173": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "174": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "175": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x23B872DD"
      },
      "180": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "181": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x127"
      },
      "184": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "185": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "186": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x313CE567"
      },
      "191": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "192": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x13A"
      },
      "195": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "196": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "197": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x39509351"
      },
      "202": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "EQ",
        "path": "1"
      },
      "203": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x16B"
      },
      "206": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "207": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "208": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "210": {
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "DUP1",
        "path": "1"
      },
      "211": {
        "first_revert": true,
        "fn": null,
        "offset": [
          16379,
          16826
        ],
        "op": "REVERT",
        "path": "1"
      },
      "212": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "213": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xDC"
      },
      "216": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x22B"
      },
      "219": {
        "fn": "ERC20.name",
        "jump": "i",
        "offset": [
          6103,
          6201
        ],
        "op": "JUMP",
        "path": "1"
      },
      "220": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "221": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "223": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "224": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xE9"
      },
      "227": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "228": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "229": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x8C1"
      },
      "232": {
        "fn": "ERC20.name",
        "jump": "i",
        "offset": [
          6103,
          6201
        ],
        "op": "JUMP",
        "path": "1"
      },
      "233": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "234": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "236": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "237": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "DUP1",
        "path": "1"
      },
      "238": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "239": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "SUB",
        "path": "1"
      },
      "240": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "241": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "RETURN",
        "path": "1"
      },
      "242": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "243": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x105"
      },
      "246": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x100"
      },
      "249": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "250": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "252": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x92B"
      },
      "255": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          8200,
          8366
        ],
        "op": "JUMP",
        "path": "1"
      },
      "256": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "257": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BD"
      },
      "260": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          8200,
          8366
        ],
        "op": "JUMP",
        "path": "1"
      },
      "261": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "262": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "264": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "265": {
        "op": "SWAP1"
      },
      "266": {
        "op": "ISZERO"
      },
      "267": {
        "op": "ISZERO"
      },
      "268": {
        "op": "DUP2"
      },
      "269": {
        "op": "MSTORE"
      },
      "270": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "272": {
        "op": "ADD"
      },
      "273": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xE9"
      },
      "276": {
        "op": "JUMP"
      },
      "277": {
        "fn": "ERC20.totalSupply",
        "offset": [
          7191,
          7297
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "278": {
        "fn": "ERC20.totalSupply",
        "offset": [
          7278,
          7290
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 0,
        "value": "0x2"
      },
      "280": {
        "fn": "ERC20.totalSupply",
        "offset": [
          7278,
          7290
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "281": {
        "fn": "ERC20.totalSupply",
        "offset": [
          7191,
          7297
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "282": {
        "fn": "ERC20.totalSupply",
        "offset": [
          7191,
          7297
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "284": {
        "fn": "ERC20.totalSupply",
        "offset": [
          7191,
          7297
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "285": {
        "op": "SWAP1"
      },
      "286": {
        "op": "DUP2"
      },
      "287": {
        "op": "MSTORE"
      },
      "288": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "290": {
        "op": "ADD"
      },
      "291": {
        "fn": "ERC20.totalSupply",
        "offset": [
          7191,
          7297
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xE9"
      },
      "294": {
        "op": "JUMP"
      },
      "295": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "296": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x105"
      },
      "299": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x135"
      },
      "302": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "303": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "305": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x955"
      },
      "308": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          8833,
          9311
        ],
        "op": "JUMP",
        "path": "1"
      },
      "309": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "310": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D4"
      },
      "313": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          8833,
          9311
        ],
        "op": "JUMP",
        "path": "1"
      },
      "314": {
        "fn": "StandardERC20.decimals",
        "offset": [
          16515,
          16620
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "315": {
        "fn": "StandardERC20.decimals",
        "offset": [
          16515,
          16620
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "317": {
        "fn": "StandardERC20.decimals",
        "offset": [
          16515,
          16620
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "318": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "320": {
        "fn": "ERC20Decimals.decimals",
        "offset": [
          16282,
          16291
        ],
        "op": "PUSH32",
        "path": "1",
        "statement": 1,
        "value": "0x0"
      },
      "353": {
        "op": "AND"
      },
      "354": {
        "op": "DUP2"
      },
      "355": {
        "op": "MSTORE"
      },
      "356": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "358": {
        "op": "ADD"
      },
      "359": {
        "fn": "StandardERC20.decimals",
        "offset": [
          16515,
          16620
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xE9"
      },
      "362": {
        "op": "JUMP"
      },
      "363": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "364": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x105"
      },
      "367": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x179"
      },
      "370": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "371": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "373": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x92B"
      },
      "376": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          9706,
          9918
        ],
        "op": "JUMP",
        "path": "1"
      },
      "377": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "378": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x388"
      },
      "381": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          9706,
          9918
        ],
        "op": "JUMP",
        "path": "1"
      },
      "382": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "383": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x191"
      },
      "386": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x18C"
      },
      "389": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "390": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "392": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x991"
      },
      "395": {
        "fn": "StandardERC20.mint",
        "jump": "i",
        "offset": [
          16748,
          16824
        ],
        "op": "JUMP",
        "path": "1"
      },
      "396": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "397": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3C4"
      },
      "400": {
        "fn": "StandardERC20.mint",
        "jump": "i",
        "offset": [
          16748,
          16824
        ],
        "op": "JUMP",
        "path": "1"
      },
      "401": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "402": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "STOP",
        "path": "1"
      },
      "403": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7355,
          7480
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "404": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7355,
          7480
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x119"
      },
      "407": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7355,
          7480
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A1"
      },
      "410": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7355,
          7480
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "411": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7355,
          7480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "413": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7355,
          7480
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x991"
      },
      "416": {
        "fn": "ERC20.balanceOf",
        "jump": "i",
        "offset": [
          7355,
          7480
        ],
        "op": "JUMP",
        "path": "1"
      },
      "417": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7355,
          7480
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "418": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "420": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "422": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "424": {
        "op": "SHL"
      },
      "425": {
        "op": "SUB"
      },
      "426": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "AND",
        "path": "1",
        "statement": 2
      },
      "427": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7429,
          7436
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "429": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "430": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "DUP2",
        "path": "1"
      },
      "431": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "432": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "434": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "DUP2",
        "path": "1"
      },
      "435": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "436": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "437": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "439": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "440": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "441": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "442": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7455,
          7473
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "443": {
        "fn": "ERC20.balanceOf",
        "offset": [
          7355,
          7480
        ],
        "op": "JUMP",
        "path": "1"
      },
      "444": {
        "fn": "ERC20.symbol",
        "offset": [
          6314,
          6416
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "445": {
        "fn": "ERC20.symbol",
        "offset": [
          6314,
          6416
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xDC"
      },
      "448": {
        "fn": "ERC20.symbol",
        "offset": [
          6314,
          6416
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3D8"
      },
      "451": {
        "fn": "ERC20.symbol",
        "jump": "i",
        "offset": [
          6314,
          6416
        ],
        "op": "JUMP",
        "path": "1"
      },
      "452": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "453": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x105"
      },
      "456": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D2"
      },
      "459": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "460": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "462": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x92B"
      },
      "465": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "i",
        "offset": [
          10405,
          10810
        ],
        "op": "JUMP",
        "path": "1"
      },
      "466": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "467": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3E7"
      },
      "470": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "i",
        "offset": [
          10405,
          10810
        ],
        "op": "JUMP",
        "path": "1"
      },
      "471": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "472": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x105"
      },
      "475": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E5"
      },
      "478": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "479": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "481": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x92B"
      },
      "484": {
        "fn": "ERC20.transfer",
        "jump": "i",
        "offset": [
          7683,
          7855
        ],
        "op": "JUMP",
        "path": "1"
      },
      "485": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "486": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x480"
      },
      "489": {
        "fn": "ERC20.transfer",
        "jump": "i",
        "offset": [
          7683,
          7855
        ],
        "op": "JUMP",
        "path": "1"
      },
      "490": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16625,
          16743
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "491": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16625,
          16743
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x119"
      },
      "494": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16625,
          16743
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x48D"
      },
      "497": {
        "fn": "StandardERC20.checkBalance",
        "jump": "i",
        "offset": [
          16625,
          16743
        ],
        "op": "JUMP",
        "path": "1"
      },
      "498": {
        "fn": "ERC20.allowance",
        "offset": [
          7913,
          8062
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "499": {
        "fn": "ERC20.allowance",
        "offset": [
          7913,
          8062
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x119"
      },
      "502": {
        "fn": "ERC20.allowance",
        "offset": [
          7913,
          8062
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x200"
      },
      "505": {
        "fn": "ERC20.allowance",
        "offset": [
          7913,
          8062
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "506": {
        "fn": "ERC20.allowance",
        "offset": [
          7913,
          8062
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "508": {
        "fn": "ERC20.allowance",
        "offset": [
          7913,
          8062
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x9B3"
      },
      "511": {
        "fn": "ERC20.allowance",
        "jump": "i",
        "offset": [
          7913,
          8062
        ],
        "op": "JUMP",
        "path": "1"
      },
      "512": {
        "fn": "ERC20.allowance",
        "offset": [
          7913,
          8062
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "513": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "515": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "517": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "519": {
        "op": "SHL"
      },
      "520": {
        "op": "SUB"
      },
      "521": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "SWAP2",
        "path": "1",
        "statement": 3
      },
      "522": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "DUP3",
        "path": "1"
      },
      "523": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "AND",
        "path": "1"
      },
      "524": {
        "fn": "ERC20.allowance",
        "offset": [
          8002,
          8009
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "526": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "527": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "DUP2",
        "path": "1"
      },
      "528": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "529": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8039
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "531": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "533": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "534": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "DUP2",
        "path": "1"
      },
      "535": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "536": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "538": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "DUP1",
        "path": "1"
      },
      "539": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "DUP4",
        "path": "1"
      },
      "540": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8046
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "541": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "542": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "543": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "544": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "AND",
        "path": "1"
      },
      "545": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "DUP3",
        "path": "1"
      },
      "546": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "547": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "548": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "549": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "550": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "551": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "552": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "553": {
        "fn": "ERC20.allowance",
        "offset": [
          8028,
          8055
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "554": {
        "fn": "ERC20.allowance",
        "offset": [
          7913,
          8062
        ],
        "op": "JUMP",
        "path": "1"
      },
      "555": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "556": {
        "fn": "ERC20.name",
        "offset": [
          6157,
          6170
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "558": {
        "fn": "ERC20.name",
        "offset": [
          6189,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 4,
        "value": "0x3"
      },
      "560": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "561": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "562": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x23A"
      },
      "565": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "566": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x9E6"
      },
      "569": {
        "fn": "ERC20.name",
        "jump": "i",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMP",
        "path": "1"
      },
      "570": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "571": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "572": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "574": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "575": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "577": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "578": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "579": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DIV",
        "path": "1"
      },
      "580": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "MUL",
        "path": "1"
      },
      "581": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "583": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "584": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "586": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "587": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "588": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP2",
        "path": "1"
      },
      "589": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "590": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "592": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "593": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "594": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "595": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "596": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "597": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP2",
        "path": "1"
      },
      "598": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP2",
        "path": "1"
      },
      "599": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "600": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "602": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "603": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP3",
        "path": "1"
      },
      "604": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "605": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "606": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x266"
      },
      "609": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "610": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x9E6"
      },
      "613": {
        "fn": "ERC20.name",
        "jump": "i",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMP",
        "path": "1"
      },
      "614": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "615": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "616": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "617": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B3"
      },
      "620": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "621": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "622": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "624": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "LT",
        "path": "1"
      },
      "625": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x288"
      },
      "628": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "629": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x100"
      },
      "632": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "633": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP4",
        "path": "1"
      },
      "634": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "635": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DIV",
        "path": "1"
      },
      "636": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "MUL",
        "path": "1"
      },
      "637": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP4",
        "path": "1"
      },
      "638": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "639": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "640": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "642": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "643": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "644": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B3"
      },
      "647": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMP",
        "path": "1"
      },
      "648": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "649": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP3",
        "path": "1"
      },
      "650": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "651": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "652": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "653": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "655": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "656": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "658": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "660": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "661": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "662": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "663": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP2",
        "path": "1"
      },
      "664": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "665": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP2",
        "path": "1"
      },
      "666": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "667": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "668": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "670": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "671": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "672": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "674": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "675": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP1",
        "path": "1"
      },
      "676": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP4",
        "path": "1"
      },
      "677": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "GT",
        "path": "1"
      },
      "678": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x296"
      },
      "681": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "682": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP3",
        "path": "1"
      },
      "683": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "684": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SUB",
        "path": "1"
      },
      "685": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "687": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "AND",
        "path": "1"
      },
      "688": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "DUP3",
        "path": "1"
      },
      "689": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "ADD",
        "path": "1"
      },
      "690": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "691": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "692": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "POP",
        "path": "1"
      },
      "693": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "POP",
        "path": "1"
      },
      "694": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "POP",
        "path": "1"
      },
      "695": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "POP",
        "path": "1"
      },
      "696": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "POP",
        "path": "1"
      },
      "697": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "698": {
        "fn": "ERC20.name",
        "offset": [
          6182,
          6194
        ],
        "op": "POP",
        "path": "1"
      },
      "699": {
        "fn": "ERC20.name",
        "offset": [
          6103,
          6201
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "700": {
        "fn": "ERC20.name",
        "jump": "o",
        "offset": [
          6103,
          6201
        ],
        "op": "JUMP",
        "path": "1"
      },
      "701": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "702": {
        "fn": "ERC20.approve",
        "offset": [
          8283,
          8287
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "704": {
        "fn": "ERC20.approve",
        "offset": [
          8299,
          8338
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 5,
        "value": "0x2CA"
      },
      "707": {
        "fn": "Context._msgSender",
        "offset": [
          3991,
          4001
        ],
        "op": "CALLER",
        "path": "1",
        "statement": 6
      },
      "708": {
        "fn": "ERC20.approve",
        "offset": [
          8322,
          8329
        ],
        "op": "DUP5",
        "path": "1"
      },
      "709": {
        "fn": "ERC20.approve",
        "offset": [
          8331,
          8337
        ],
        "op": "DUP5",
        "path": "1"
      },
      "710": {
        "fn": "ERC20.approve",
        "offset": [
          8299,
          8307
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4EF"
      },
      "713": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          8299,
          8338
        ],
        "op": "JUMP",
        "path": "1"
      },
      "714": {
        "fn": "ERC20.approve",
        "offset": [
          8299,
          8338
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "715": {
        "op": "POP"
      },
      "716": {
        "fn": "ERC20.approve",
        "offset": [
          8355,
          8359
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 7,
        "value": "0x1"
      },
      "718": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "719": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "720": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "721": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "POP",
        "path": "1"
      },
      "722": {
        "fn": "ERC20.approve",
        "offset": [
          8200,
          8366
        ],
        "op": "POP",
        "path": "1"
      },
      "723": {
        "fn": "ERC20.approve",
        "jump": "o",
        "offset": [
          8200,
          8366
        ],
        "op": "JUMP",
        "path": "1"
      },
      "724": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "725": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8969,
          8973
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "727": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8985,
          9021
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 8,
        "value": "0x2E1"
      },
      "730": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8995,
          9001
        ],
        "op": "DUP5",
        "path": "1"
      },
      "731": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9003,
          9012
        ],
        "op": "DUP5",
        "path": "1"
      },
      "732": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9014,
          9020
        ],
        "op": "DUP5",
        "path": "1"
      },
      "733": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8985,
          8994
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x613"
      },
      "736": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          8985,
          9021
        ],
        "op": "JUMP",
        "path": "1"
      },
      "737": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8985,
          9021
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "738": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "740": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "742": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "744": {
        "op": "SHL"
      },
      "745": {
        "op": "SUB"
      },
      "746": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "DUP5",
        "path": "1"
      },
      "747": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "AND",
        "path": "1"
      },
      "748": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9032,
          9056
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "750": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "751": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "DUP2",
        "path": "1"
      },
      "752": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "753": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9070
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "755": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "757": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "758": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "DUP2",
        "path": "1"
      },
      "759": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "760": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "762": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "DUP1",
        "path": "1"
      },
      "763": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "DUP4",
        "path": "1"
      },
      "764": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9078
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "765": {
        "fn": "Context._msgSender",
        "offset": [
          3991,
          4001
        ],
        "op": "CALLER",
        "path": "1"
      },
      "766": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9092
        ],
        "op": "DUP5",
        "path": "1"
      },
      "767": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9092
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "768": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9092
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "769": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9092
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "770": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9092
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "771": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9092
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "772": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9092
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "773": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9059,
          9092
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "774": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9110,
          9136
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 9
      },
      "775": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9110,
          9136
        ],
        "op": "DUP2",
        "path": "1"
      },
      "776": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9110,
          9136
        ],
        "op": "LT",
        "path": "1"
      },
      "777": {
        "branch": 35,
        "fn": "ERC20.transferFrom",
        "offset": [
          9110,
          9136
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "778": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x36B"
      },
      "781": {
        "branch": 35,
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "782": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "784": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "785": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "789": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "791": {
        "op": "SHL"
      },
      "792": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "DUP2",
        "path": "1"
      },
      "793": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "794": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "796": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "798": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "DUP3",
        "path": "1"
      },
      "799": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "ADD",
        "path": "1"
      },
      "800": {
        "op": "MSTORE"
      },
      "801": {
        "op": "PUSH1",
        "value": "0x28"
      },
      "803": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "805": {
        "op": "DUP3"
      },
      "806": {
        "op": "ADD"
      },
      "807": {
        "op": "MSTORE"
      },
      "808": {
        "op": "PUSH32",
        "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
      },
      "841": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "843": {
        "op": "DUP3"
      },
      "844": {
        "op": "ADD"
      },
      "845": {
        "op": "MSTORE"
      },
      "846": {
        "op": "PUSH8",
        "value": "0x6C6C6F77616E6365"
      },
      "855": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "857": {
        "op": "SHL"
      },
      "858": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "860": {
        "op": "DUP3"
      },
      "861": {
        "op": "ADD"
      },
      "862": {
        "op": "MSTORE"
      },
      "863": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "865": {
        "op": "ADD"
      },
      "866": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "867": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "869": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "870": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "DUP1",
        "path": "1"
      },
      "871": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "872": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "SUB",
        "path": "1"
      },
      "873": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "874": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "REVERT",
        "optimizer_revert": true,
        "path": "1"
      },
      "875": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9102,
          9181
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "876": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9215,
          9272
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 10,
        "value": "0x378"
      },
      "879": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9224,
          9230
        ],
        "op": "DUP6",
        "path": "1"
      },
      "880": {
        "fn": "Context._msgSender",
        "offset": [
          3991,
          4001
        ],
        "op": "CALLER",
        "path": "1"
      },
      "881": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9265,
          9271
        ],
        "op": "DUP6",
        "path": "1"
      },
      "882": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9246,
          9262
        ],
        "op": "DUP5",
        "path": "1"
      },
      "883": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9246,
          9271
        ],
        "op": "SUB",
        "path": "1"
      },
      "884": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9215,
          9223
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4EF"
      },
      "887": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          9215,
          9272
        ],
        "op": "JUMP",
        "path": "1"
      },
      "888": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9215,
          9272
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "889": {
        "op": "POP"
      },
      "890": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9300,
          9304
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 11,
        "value": "0x1"
      },
      "892": {
        "fn": "ERC20.transferFrom",
        "offset": [
          9300,
          9304
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "893": {
        "fn": "ERC20.transferFrom",
        "offset": [
          8833,
          9311
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "894": {
        "op": "POP"
      },
      "895": {
        "op": "POP"
      },
      "896": {
        "op": "POP"
      },
      "897": {
        "op": "POP"
      },
      "898": {
        "fn": "ERC20.transferFrom",
        "jump": "o",
        "offset": [
          8833,
          9311
        ],
        "op": "JUMP",
        "path": "1"
      },
      "899": {
        "fn": "StandardERC20.decimals",
        "offset": [
          16597,
          16613
        ],
        "op": "JUMPDEST",
        "path": "1",
        "statement": 12
      },
      "900": {
        "fn": "StandardERC20.decimals",
        "offset": [
          16590,
          16613
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "901": {
        "fn": "StandardERC20.decimals",
        "offset": [
          16590,
          16613
        ],
        "op": "POP",
        "path": "1"
      },
      "902": {
        "fn": "StandardERC20.decimals",
        "offset": [
          16515,
          16620
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "903": {
        "fn": "StandardERC20.decimals",
        "jump": "o",
        "offset": [
          16515,
          16620
        ],
        "op": "JUMP",
        "path": "1"
      },
      "904": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9706,
          9918
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "905": {
        "fn": "Context._msgSender",
        "offset": [
          3991,
          4001
        ],
        "op": "CALLER",
        "path": "1"
      },
      "906": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9794,
          9798
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "908": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "DUP2",
        "path": "1",
        "statement": 13
      },
      "909": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "DUP2",
        "path": "1"
      },
      "910": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "911": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9853
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "913": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "915": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "916": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "DUP2",
        "path": "1"
      },
      "917": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "918": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "920": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "DUP1",
        "path": "1"
      },
      "921": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "DUP4",
        "path": "1"
      },
      "922": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9867
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "923": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "925": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "927": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "929": {
        "op": "SHL"
      },
      "930": {
        "op": "SUB"
      },
      "931": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "DUP8",
        "path": "1"
      },
      "932": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "AND",
        "path": "1"
      },
      "933": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "DUP5",
        "path": "1"
      },
      "934": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "935": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "936": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "937": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "938": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "DUP2",
        "path": "1"
      },
      "939": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "940": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9876
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "941": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9794,
          9798
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "942": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9794,
          9798
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "943": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9810,
          9890
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2CA"
      },
      "946": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9810,
          9890
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "947": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9833,
          9840
        ],
        "op": "DUP6",
        "path": "1"
      },
      "948": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9833,
          9840
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "949": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9889
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3BF"
      },
      "952": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9889
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "953": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9879,
          9889
        ],
        "op": "DUP7",
        "path": "1"
      },
      "954": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9879,
          9889
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "955": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9889
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA20"
      },
      "958": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          9842,
          9889
        ],
        "op": "JUMP",
        "path": "1"
      },
      "959": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9842,
          9889
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "960": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          9810,
          9818
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4EF"
      },
      "963": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          9810,
          9890
        ],
        "op": "JUMP",
        "path": "1"
      },
      "964": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "965": {
        "fn": "StandardERC20.mint",
        "offset": [
          16793,
          16817
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 14,
        "value": "0x3D5"
      },
      "968": {
        "fn": "StandardERC20.mint",
        "offset": [
          16799,
          16801
        ],
        "op": "DUP2",
        "path": "1"
      },
      "969": {
        "fn": "StandardERC20.mint",
        "offset": [
          16803,
          16816
        ],
        "op": "PUSH7",
        "path": "1",
        "value": "0x38D7EA4C68000"
      },
      "977": {
        "fn": "StandardERC20.mint",
        "offset": [
          16793,
          16798
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x7E2"
      },
      "980": {
        "fn": "StandardERC20.mint",
        "jump": "i",
        "offset": [
          16793,
          16817
        ],
        "op": "JUMP",
        "path": "1"
      },
      "981": {
        "fn": "StandardERC20.mint",
        "offset": [
          16793,
          16817
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "982": {
        "fn": "StandardERC20.mint",
        "offset": [
          16748,
          16824
        ],
        "op": "POP",
        "path": "1"
      },
      "983": {
        "fn": "StandardERC20.mint",
        "jump": "o",
        "offset": [
          16748,
          16824
        ],
        "op": "JUMP",
        "path": "1"
      },
      "984": {
        "fn": "ERC20.symbol",
        "offset": [
          6314,
          6416
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "985": {
        "fn": "ERC20.symbol",
        "offset": [
          6370,
          6383
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "987": {
        "fn": "ERC20.symbol",
        "offset": [
          6402,
          6409
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 15,
        "value": "0x4"
      },
      "989": {
        "fn": "ERC20.symbol",
        "offset": [
          6395,
          6409
        ],
        "op": "DUP1",
        "path": "1"
      },
      "990": {
        "fn": "ERC20.symbol",
        "offset": [
          6395,
          6409
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "991": {
        "fn": "ERC20.symbol",
        "offset": [
          6395,
          6409
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x23A"
      },
      "994": {
        "fn": "ERC20.symbol",
        "offset": [
          6395,
          6409
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "995": {
        "fn": "ERC20.symbol",
        "offset": [
          6395,
          6409
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x9E6"
      },
      "998": {
        "fn": "ERC20.symbol",
        "jump": "i",
        "offset": [
          6395,
          6409
        ],
        "op": "JUMP",
        "path": "1"
      },
      "999": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1000": {
        "fn": "Context._msgSender",
        "offset": [
          3991,
          4001
        ],
        "op": "CALLER",
        "path": "1"
      },
      "1001": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10498,
          10502
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1003": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1004": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1005": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1006": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10552
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "1008": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1010": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1011": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1012": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1013": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1015": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1016": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1017": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10566
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1018": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1020": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1022": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1024": {
        "op": "SHL"
      },
      "1025": {
        "op": "SUB"
      },
      "1026": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "DUP7",
        "path": "1"
      },
      "1027": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "AND",
        "path": "1"
      },
      "1028": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1029": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1030": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1031": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1032": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1033": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1034": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1035": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10541,
          10575
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1036": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10593,
          10628
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 16
      },
      "1037": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10593,
          10628
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1038": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10593,
          10628
        ],
        "op": "LT",
        "path": "1"
      },
      "1039": {
        "branch": 36,
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10593,
          10628
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1040": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x469"
      },
      "1043": {
        "branch": 36,
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1044": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1046": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1047": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1051": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1053": {
        "op": "SHL"
      },
      "1054": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1055": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1056": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1058": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1060": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1061": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "ADD",
        "path": "1"
      },
      "1062": {
        "op": "MSTORE"
      },
      "1063": {
        "op": "PUSH1",
        "value": "0x25"
      },
      "1065": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1067": {
        "op": "DUP3"
      },
      "1068": {
        "op": "ADD"
      },
      "1069": {
        "op": "MSTORE"
      },
      "1070": {
        "op": "PUSH32",
        "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
      },
      "1103": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1105": {
        "op": "DUP3"
      },
      "1106": {
        "op": "ADD"
      },
      "1107": {
        "op": "MSTORE"
      },
      "1108": {
        "op": "PUSH5",
        "value": "0x207A65726F"
      },
      "1114": {
        "op": "PUSH1",
        "value": "0xD8"
      },
      "1116": {
        "op": "SHL"
      },
      "1117": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1119": {
        "op": "DUP3"
      },
      "1120": {
        "op": "ADD"
      },
      "1121": {
        "op": "MSTORE"
      },
      "1122": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "1124": {
        "op": "ADD"
      },
      "1125": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x362"
      },
      "1128": {
        "op": "JUMP"
      },
      "1129": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10585,
          10670
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1130": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10704,
          10771
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 17,
        "value": "0x476"
      },
      "1133": {
        "fn": "Context._msgSender",
        "offset": [
          3991,
          4001
        ],
        "op": "CALLER",
        "path": "1"
      },
      "1134": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10727,
          10734
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1135": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10755,
          10770
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1136": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10736,
          10752
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1137": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10736,
          10770
        ],
        "op": "SUB",
        "path": "1"
      },
      "1138": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10704,
          10712
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4EF"
      },
      "1141": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "i",
        "offset": [
          10704,
          10771
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1142": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10704,
          10771
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1143": {
        "op": "POP"
      },
      "1144": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10799,
          10803
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 18,
        "value": "0x1"
      },
      "1146": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10799,
          10803
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "1147": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          10405,
          10810
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "1148": {
        "op": "POP"
      },
      "1149": {
        "op": "POP"
      },
      "1150": {
        "op": "POP"
      },
      "1151": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "o",
        "offset": [
          10405,
          10810
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1152": {
        "fn": "ERC20.transfer",
        "offset": [
          7683,
          7855
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1153": {
        "fn": "ERC20.transfer",
        "offset": [
          7769,
          7773
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1155": {
        "fn": "ERC20.transfer",
        "offset": [
          7785,
          7827
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 19,
        "value": "0x2CA"
      },
      "1158": {
        "fn": "Context._msgSender",
        "offset": [
          3991,
          4001
        ],
        "op": "CALLER",
        "path": "1"
      },
      "1159": {
        "fn": "ERC20.transfer",
        "offset": [
          7809,
          7818
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1160": {
        "fn": "ERC20.transfer",
        "offset": [
          7820,
          7826
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1161": {
        "fn": "ERC20.transfer",
        "offset": [
          7785,
          7794
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x613"
      },
      "1164": {
        "fn": "ERC20.transfer",
        "jump": "i",
        "offset": [
          7785,
          7827
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1165": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16625,
          16743
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1166": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 20,
        "value": "0x40"
      },
      "1168": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1169": {
        "op": "PUSH4",
        "value": "0x70A08231"
      },
      "1174": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "1176": {
        "op": "SHL"
      },
      "1177": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1178": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1179": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16725,
          16735
        ],
        "op": "CALLER",
        "path": "1"
      },
      "1180": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1182": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1183": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "ADD",
        "path": "1"
      },
      "1184": {
        "op": "MSTORE"
      },
      "1185": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16671,
          16675
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1187": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16671,
          16675
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1188": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16708,
          16712
        ],
        "op": "ADDRESS",
        "path": "1"
      },
      "1189": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16708,
          16712
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1190": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16724
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x70A08231"
      },
      "1195": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16724
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1196": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1198": {
        "op": "ADD"
      },
      "1199": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1201": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1203": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1204": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1205": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1206": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "SUB",
        "path": "1"
      },
      "1207": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1208": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP7",
        "path": "1"
      },
      "1209": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "GAS",
        "path": "1"
      },
      "1210": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "1211": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1212": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1213": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1214": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4CB"
      },
      "1217": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1218": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "1219": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1221": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1222": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "1223": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "1224": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1226": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1227": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1228": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "POP",
        "path": "1"
      },
      "1229": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "POP",
        "path": "1"
      },
      "1230": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "POP",
        "path": "1"
      },
      "1231": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "POP",
        "path": "1"
      },
      "1232": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1234": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1235": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "1236": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "1238": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "NOT",
        "path": "1"
      },
      "1239": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "1241": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1242": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "ADD",
        "path": "1"
      },
      "1243": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "AND",
        "path": "1"
      },
      "1244": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1245": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "ADD",
        "path": "1"
      },
      "1246": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1247": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1249": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1250": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "POP",
        "path": "1"
      },
      "1251": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1252": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "ADD",
        "path": "1"
      },
      "1253": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1254": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x383"
      },
      "1257": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1258": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1259": {
        "fn": "StandardERC20.checkBalance",
        "offset": [
          16693,
          16736
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA41"
      },
      "1262": {
        "fn": "StandardERC20.checkBalance",
        "jump": "i",
        "offset": [
          16693,
          16736
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1263": {
        "fn": "ERC20._approve",
        "offset": [
          13981,
          14351
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1264": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1266": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1268": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1270": {
        "op": "SHL"
      },
      "1271": {
        "op": "SUB"
      },
      "1272": {
        "fn": "ERC20._approve",
        "offset": [
          14112,
          14131
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 21
      },
      "1273": {
        "branch": 37,
        "fn": "ERC20._approve",
        "offset": [
          14112,
          14131
        ],
        "op": "AND",
        "path": "1"
      },
      "1274": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x551"
      },
      "1277": {
        "branch": 37,
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1278": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1280": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1281": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1285": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1287": {
        "op": "SHL"
      },
      "1288": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1289": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1290": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1292": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1294": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1295": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "ADD",
        "path": "1"
      },
      "1296": {
        "op": "MSTORE"
      },
      "1297": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1299": {
        "op": "DUP1"
      },
      "1300": {
        "op": "DUP3"
      },
      "1301": {
        "op": "ADD"
      },
      "1302": {
        "op": "MSTORE"
      },
      "1303": {
        "op": "PUSH32",
        "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
      },
      "1336": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1338": {
        "op": "DUP3"
      },
      "1339": {
        "op": "ADD"
      },
      "1340": {
        "op": "MSTORE"
      },
      "1341": {
        "op": "PUSH4",
        "value": "0x72657373"
      },
      "1346": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "1348": {
        "op": "SHL"
      },
      "1349": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1351": {
        "op": "DUP3"
      },
      "1352": {
        "op": "ADD"
      },
      "1353": {
        "op": "MSTORE"
      },
      "1354": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "1356": {
        "op": "ADD"
      },
      "1357": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x362"
      },
      "1360": {
        "op": "JUMP"
      },
      "1361": {
        "fn": "ERC20._approve",
        "offset": [
          14104,
          14172
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1362": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1364": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1366": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1368": {
        "op": "SHL"
      },
      "1369": {
        "op": "SUB"
      },
      "1370": {
        "fn": "ERC20._approve",
        "offset": [
          14190,
          14211
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 22
      },
      "1371": {
        "branch": 38,
        "fn": "ERC20._approve",
        "offset": [
          14190,
          14211
        ],
        "op": "AND",
        "path": "1"
      },
      "1372": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5B2"
      },
      "1375": {
        "branch": 38,
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1376": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1378": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1379": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1383": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1385": {
        "op": "SHL"
      },
      "1386": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1387": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1388": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1390": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1392": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1393": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "ADD",
        "path": "1"
      },
      "1394": {
        "op": "MSTORE"
      },
      "1395": {
        "op": "PUSH1",
        "value": "0x22"
      },
      "1397": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1399": {
        "op": "DUP3"
      },
      "1400": {
        "op": "ADD"
      },
      "1401": {
        "op": "MSTORE"
      },
      "1402": {
        "op": "PUSH32",
        "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
      },
      "1435": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1437": {
        "op": "DUP3"
      },
      "1438": {
        "op": "ADD"
      },
      "1439": {
        "op": "MSTORE"
      },
      "1440": {
        "op": "PUSH2",
        "value": "0x7373"
      },
      "1443": {
        "op": "PUSH1",
        "value": "0xF0"
      },
      "1445": {
        "op": "SHL"
      },
      "1446": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1448": {
        "op": "DUP3"
      },
      "1449": {
        "op": "ADD"
      },
      "1450": {
        "op": "MSTORE"
      },
      "1451": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "1453": {
        "op": "ADD"
      },
      "1454": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x362"
      },
      "1457": {
        "op": "JUMP"
      },
      "1458": {
        "fn": "ERC20._approve",
        "offset": [
          14182,
          14250
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1459": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1461": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1463": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1465": {
        "op": "SHL"
      },
      "1466": {
        "op": "SUB"
      },
      "1467": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 23
      },
      "1468": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1469": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "AND",
        "path": "1"
      },
      "1470": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1472": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1473": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1474": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1475": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14272
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "1477": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1479": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1480": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1481": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1482": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1484": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1485": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1486": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14279
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1487": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "1488": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "DUP8",
        "path": "1"
      },
      "1489": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "AND",
        "path": "1"
      },
      "1490": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1491": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1492": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1493": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "1494": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1495": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1496": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1497": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1498": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1499": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14288
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1500": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14297
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1501": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14297
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1502": {
        "fn": "ERC20._approve",
        "offset": [
          14261,
          14297
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "1503": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "SWAP1",
        "path": "1",
        "statement": 24
      },
      "1504": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1505": {
        "op": "DUP5"
      },
      "1506": {
        "op": "DUP2"
      },
      "1507": {
        "op": "MSTORE"
      },
      "1508": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
      },
      "1541": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1542": {
        "op": "ADD"
      },
      "1543": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1545": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1546": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1547": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1548": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "SUB",
        "path": "1"
      },
      "1549": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1550": {
        "fn": "ERC20._approve",
        "offset": [
          14312,
          14344
        ],
        "op": "LOG3",
        "path": "1"
      },
      "1551": {
        "fn": "ERC20._approve",
        "offset": [
          13981,
          14351
        ],
        "op": "POP",
        "path": "1"
      },
      "1552": {
        "fn": "ERC20._approve",
        "offset": [
          13981,
          14351
        ],
        "op": "POP",
        "path": "1"
      },
      "1553": {
        "fn": "ERC20._approve",
        "offset": [
          13981,
          14351
        ],
        "op": "POP",
        "path": "1"
      },
      "1554": {
        "fn": "ERC20._approve",
        "jump": "o",
        "offset": [
          13981,
          14351
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1555": {
        "fn": "ERC20._transfer",
        "offset": [
          11284,
          11997
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1556": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1558": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1560": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1562": {
        "op": "SHL"
      },
      "1563": {
        "op": "SUB"
      },
      "1564": {
        "fn": "ERC20._transfer",
        "offset": [
          11419,
          11439
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 25
      },
      "1565": {
        "branch": 39,
        "fn": "ERC20._transfer",
        "offset": [
          11419,
          11439
        ],
        "op": "AND",
        "path": "1"
      },
      "1566": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x677"
      },
      "1569": {
        "branch": 39,
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1570": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1572": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1573": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1577": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1579": {
        "op": "SHL"
      },
      "1580": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1581": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1582": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1584": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1586": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1587": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "ADD",
        "path": "1"
      },
      "1588": {
        "op": "MSTORE"
      },
      "1589": {
        "op": "PUSH1",
        "value": "0x25"
      },
      "1591": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1593": {
        "op": "DUP3"
      },
      "1594": {
        "op": "ADD"
      },
      "1595": {
        "op": "MSTORE"
      },
      "1596": {
        "op": "PUSH32",
        "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
      },
      "1629": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1631": {
        "op": "DUP3"
      },
      "1632": {
        "op": "ADD"
      },
      "1633": {
        "op": "MSTORE"
      },
      "1634": {
        "op": "PUSH5",
        "value": "0x6472657373"
      },
      "1640": {
        "op": "PUSH1",
        "value": "0xD8"
      },
      "1642": {
        "op": "SHL"
      },
      "1643": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1645": {
        "op": "DUP3"
      },
      "1646": {
        "op": "ADD"
      },
      "1647": {
        "op": "MSTORE"
      },
      "1648": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "1650": {
        "op": "ADD"
      },
      "1651": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x362"
      },
      "1654": {
        "op": "JUMP"
      },
      "1655": {
        "fn": "ERC20._transfer",
        "offset": [
          11411,
          11481
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1656": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1658": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1660": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1662": {
        "op": "SHL"
      },
      "1663": {
        "op": "SUB"
      },
      "1664": {
        "fn": "ERC20._transfer",
        "offset": [
          11499,
          11522
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 26
      },
      "1665": {
        "branch": 40,
        "fn": "ERC20._transfer",
        "offset": [
          11499,
          11522
        ],
        "op": "AND",
        "path": "1"
      },
      "1666": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x6D9"
      },
      "1669": {
        "branch": 40,
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1670": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1672": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1673": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1677": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1679": {
        "op": "SHL"
      },
      "1680": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1681": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1682": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1684": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1686": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1687": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "ADD",
        "path": "1"
      },
      "1688": {
        "op": "MSTORE"
      },
      "1689": {
        "op": "PUSH1",
        "value": "0x23"
      },
      "1691": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1693": {
        "op": "DUP3"
      },
      "1694": {
        "op": "ADD"
      },
      "1695": {
        "op": "MSTORE"
      },
      "1696": {
        "op": "PUSH32",
        "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
      },
      "1729": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1731": {
        "op": "DUP3"
      },
      "1732": {
        "op": "ADD"
      },
      "1733": {
        "op": "MSTORE"
      },
      "1734": {
        "op": "PUSH3",
        "value": "0x657373"
      },
      "1738": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "1740": {
        "op": "SHL"
      },
      "1741": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1743": {
        "op": "DUP3"
      },
      "1744": {
        "op": "ADD"
      },
      "1745": {
        "op": "MSTORE"
      },
      "1746": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "1748": {
        "op": "ADD"
      },
      "1749": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x362"
      },
      "1752": {
        "op": "JUMP"
      },
      "1753": {
        "fn": "ERC20._transfer",
        "offset": [
          11491,
          11562
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1754": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1756": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1758": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1760": {
        "op": "SHL"
      },
      "1761": {
        "op": "SUB"
      },
      "1762": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1763": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "AND",
        "path": "1"
      },
      "1764": {
        "fn": "ERC20._transfer",
        "offset": [
          11631,
          11652
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1766": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1767": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1768": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1769": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1771": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1772": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1773": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1774": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1776": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1777": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1778": {
        "fn": "ERC20._transfer",
        "offset": [
          11655,
          11672
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1779": {
        "fn": "ERC20._transfer",
        "offset": [
          11690,
          11713
        ],
        "op": "DUP2",
        "path": "1",
        "statement": 27
      },
      "1780": {
        "fn": "ERC20._transfer",
        "offset": [
          11690,
          11713
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1781": {
        "fn": "ERC20._transfer",
        "offset": [
          11690,
          11713
        ],
        "op": "LT",
        "path": "1"
      },
      "1782": {
        "branch": 41,
        "fn": "ERC20._transfer",
        "offset": [
          11690,
          11713
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1783": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x751"
      },
      "1786": {
        "branch": 41,
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1787": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1789": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1790": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1794": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1796": {
        "op": "SHL"
      },
      "1797": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1798": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1799": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1801": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1803": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1804": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "ADD",
        "path": "1"
      },
      "1805": {
        "op": "MSTORE"
      },
      "1806": {
        "op": "PUSH1",
        "value": "0x26"
      },
      "1808": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1810": {
        "op": "DUP3"
      },
      "1811": {
        "op": "ADD"
      },
      "1812": {
        "op": "MSTORE"
      },
      "1813": {
        "op": "PUSH32",
        "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
      },
      "1846": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1848": {
        "op": "DUP3"
      },
      "1849": {
        "op": "ADD"
      },
      "1850": {
        "op": "MSTORE"
      },
      "1851": {
        "op": "PUSH6",
        "value": "0x616C616E6365"
      },
      "1858": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "1860": {
        "op": "SHL"
      },
      "1861": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1863": {
        "op": "DUP3"
      },
      "1864": {
        "op": "ADD"
      },
      "1865": {
        "op": "MSTORE"
      },
      "1866": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "1868": {
        "op": "ADD"
      },
      "1869": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x362"
      },
      "1872": {
        "op": "JUMP"
      },
      "1873": {
        "fn": "ERC20._transfer",
        "offset": [
          11682,
          11756
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1874": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1876": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1878": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1880": {
        "op": "SHL"
      },
      "1881": {
        "op": "SUB"
      },
      "1882": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "DUP1",
        "path": "1",
        "statement": 28
      },
      "1883": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1884": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "AND",
        "path": "1"
      },
      "1885": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11799
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1887": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1888": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1889": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1890": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1892": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1893": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1894": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1895": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1897": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1898": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1899": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11807
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1900": {
        "fn": "ERC20._transfer",
        "offset": [
          11810,
          11832
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1901": {
        "fn": "ERC20._transfer",
        "offset": [
          11810,
          11832
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1902": {
        "fn": "ERC20._transfer",
        "offset": [
          11810,
          11832
        ],
        "op": "SUB",
        "path": "1"
      },
      "1903": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11832
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1904": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11832
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "1905": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11872
        ],
        "op": "SWAP2",
        "path": "1",
        "statement": 29
      },
      "1906": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11872
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1907": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11872
        ],
        "op": "AND",
        "path": "1"
      },
      "1908": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11872
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1909": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11872
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1910": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11872
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1911": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11872
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1912": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11872
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1913": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1914": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1915": {
        "fn": "ERC20._transfer",
        "offset": [
          11826,
          11832
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1916": {
        "fn": "ERC20._transfer",
        "offset": [
          11826,
          11832
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "1917": {
        "fn": "ERC20._transfer",
        "offset": [
          11790,
          11799
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1918": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x788"
      },
      "1921": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1922": {
        "fn": "ERC20._transfer",
        "offset": [
          11826,
          11832
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1923": {
        "fn": "ERC20._transfer",
        "offset": [
          11826,
          11832
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1924": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA20"
      },
      "1927": {
        "fn": "ERC20._transfer",
        "jump": "i",
        "offset": [
          11852,
          11882
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1928": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1929": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "1930": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "POP",
        "path": "1"
      },
      "1931": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "POP",
        "path": "1"
      },
      "1932": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1933": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1934": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "1935": {
        "fn": "ERC20._transfer",
        "offset": [
          11852,
          11882
        ],
        "op": "POP",
        "path": "1"
      },
      "1936": {
        "fn": "ERC20._transfer",
        "offset": [
          11915,
          11924
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 30
      },
      "1937": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1939": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1941": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1943": {
        "op": "SHL"
      },
      "1944": {
        "op": "SUB"
      },
      "1945": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "AND",
        "path": "1"
      },
      "1946": {
        "fn": "ERC20._transfer",
        "offset": [
          11907,
          11913
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1947": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1949": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1951": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1953": {
        "op": "SHL"
      },
      "1954": {
        "op": "SUB"
      },
      "1955": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "AND",
        "path": "1"
      },
      "1956": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
      },
      "1989": {
        "fn": "ERC20._transfer",
        "offset": [
          11926,
          11932
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1990": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1992": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1993": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x7D4"
      },
      "1996": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1997": {
        "op": "DUP2"
      },
      "1998": {
        "op": "MSTORE"
      },
      "1999": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2001": {
        "op": "ADD"
      },
      "2002": {
        "op": "SWAP1"
      },
      "2003": {
        "op": "JUMP"
      },
      "2004": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2005": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2007": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2008": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2009": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2010": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "SUB",
        "path": "1"
      },
      "2011": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2012": {
        "fn": "ERC20._transfer",
        "offset": [
          11898,
          11933
        ],
        "op": "LOG3",
        "path": "1"
      },
      "2013": {
        "fn": "ERC20._transfer",
        "offset": [
          11401,
          11997
        ],
        "op": "POP",
        "path": "1"
      },
      "2014": {
        "fn": "ERC20._transfer",
        "offset": [
          11284,
          11997
        ],
        "op": "POP",
        "path": "1"
      },
      "2015": {
        "fn": "ERC20._transfer",
        "offset": [
          11284,
          11997
        ],
        "op": "POP",
        "path": "1"
      },
      "2016": {
        "fn": "ERC20._transfer",
        "offset": [
          11284,
          11997
        ],
        "op": "POP",
        "path": "1"
      },
      "2017": {
        "fn": "ERC20._transfer",
        "jump": "o",
        "offset": [
          11284,
          11997
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2018": {
        "fn": "ERC20._mint",
        "offset": [
          12273,
          12662
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2019": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2021": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2023": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2025": {
        "op": "SHL"
      },
      "2026": {
        "op": "SUB"
      },
      "2027": {
        "fn": "ERC20._mint",
        "offset": [
          12356,
          12377
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 31
      },
      "2028": {
        "branch": 42,
        "fn": "ERC20._mint",
        "offset": [
          12356,
          12377
        ],
        "op": "AND",
        "path": "1"
      },
      "2029": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x838"
      },
      "2032": {
        "branch": 42,
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2033": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2035": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2036": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2040": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2042": {
        "op": "SHL"
      },
      "2043": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2044": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2045": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2047": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "2049": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2050": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "ADD",
        "path": "1"
      },
      "2051": {
        "op": "MSTORE"
      },
      "2052": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2054": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2056": {
        "op": "DUP3"
      },
      "2057": {
        "op": "ADD"
      },
      "2058": {
        "op": "MSTORE"
      },
      "2059": {
        "op": "PUSH32",
        "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
      },
      "2092": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2094": {
        "op": "DUP3"
      },
      "2095": {
        "op": "ADD"
      },
      "2096": {
        "op": "MSTORE"
      },
      "2097": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2099": {
        "op": "ADD"
      },
      "2100": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x362"
      },
      "2103": {
        "op": "JUMP"
      },
      "2104": {
        "fn": "ERC20._mint",
        "offset": [
          12348,
          12413
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2105": {
        "fn": "ERC20._mint",
        "offset": [
          12500,
          12506
        ],
        "op": "DUP1",
        "path": "1",
        "statement": 32
      },
      "2106": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12496
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x2"
      },
      "2108": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12496
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2110": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2111": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2112": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2113": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x84A"
      },
      "2116": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2117": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2118": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA20"
      },
      "2121": {
        "fn": "ERC20._mint",
        "jump": "i",
        "offset": [
          12484,
          12506
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2122": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2123": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2124": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2125": {
        "fn": "ERC20._mint",
        "offset": [
          12484,
          12506
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "2126": {
        "op": "POP"
      },
      "2127": {
        "op": "POP"
      },
      "2128": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2130": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2132": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2134": {
        "op": "SHL"
      },
      "2135": {
        "op": "SUB"
      },
      "2136": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 33
      },
      "2137": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "AND",
        "path": "1"
      },
      "2138": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12525
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2140": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2141": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2142": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2143": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2145": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2146": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2147": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2148": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2150": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2151": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12534
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2152": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2153": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2154": {
        "fn": "ERC20._mint",
        "offset": [
          12538,
          12544
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2155": {
        "fn": "ERC20._mint",
        "offset": [
          12538,
          12544
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "2156": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12525
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2157": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x877"
      },
      "2160": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2161": {
        "fn": "ERC20._mint",
        "offset": [
          12538,
          12544
        ],
        "op": "DUP5",
        "path": "1"
      },
      "2162": {
        "fn": "ERC20._mint",
        "offset": [
          12538,
          12544
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2163": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA20"
      },
      "2166": {
        "fn": "ERC20._mint",
        "jump": "i",
        "offset": [
          12516,
          12544
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2167": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2168": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2169": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2170": {
        "fn": "ERC20._mint",
        "offset": [
          12516,
          12544
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "2171": {
        "op": "POP"
      },
      "2172": {
        "op": "POP"
      },
      "2173": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 34,
        "value": "0x40"
      },
      "2175": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2176": {
        "op": "DUP2"
      },
      "2177": {
        "op": "DUP2"
      },
      "2178": {
        "op": "MSTORE"
      },
      "2179": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2181": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2183": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2185": {
        "op": "SHL"
      },
      "2186": {
        "op": "SUB"
      },
      "2187": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2188": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "AND",
        "path": "1"
      },
      "2189": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2190": {
        "fn": "ERC20._mint",
        "offset": [
          12576,
          12577
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2192": {
        "fn": "ERC20._mint",
        "offset": [
          12576,
          12577
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2193": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
      },
      "2226": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2227": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2229": {
        "op": "ADD"
      },
      "2230": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2232": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2233": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2234": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2235": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "SUB",
        "path": "1"
      },
      "2236": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2237": {
        "fn": "ERC20._mint",
        "offset": [
          12559,
          12596
        ],
        "op": "LOG3",
        "path": "1"
      },
      "2238": {
        "fn": "ERC20._mint",
        "offset": [
          12273,
          12662
        ],
        "op": "POP",
        "path": "1"
      },
      "2239": {
        "fn": "ERC20._mint",
        "offset": [
          12273,
          12662
        ],
        "op": "POP",
        "path": "1"
      },
      "2240": {
        "fn": "ERC20._mint",
        "jump": "o",
        "offset": [
          12273,
          12662
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2241": {
        "op": "JUMPDEST"
      },
      "2242": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2244": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2246": {
        "op": "DUP1"
      },
      "2247": {
        "op": "DUP4"
      },
      "2248": {
        "op": "MSTORE"
      },
      "2249": {
        "op": "DUP4"
      },
      "2250": {
        "op": "MLOAD"
      },
      "2251": {
        "op": "DUP1"
      },
      "2252": {
        "op": "DUP3"
      },
      "2253": {
        "op": "DUP6"
      },
      "2254": {
        "op": "ADD"
      },
      "2255": {
        "op": "MSTORE"
      },
      "2256": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2258": {
        "op": "JUMPDEST"
      },
      "2259": {
        "op": "DUP2"
      },
      "2260": {
        "op": "DUP2"
      },
      "2261": {
        "op": "LT"
      },
      "2262": {
        "op": "ISZERO"
      },
      "2263": {
        "op": "PUSH2",
        "value": "0x8EE"
      },
      "2266": {
        "op": "JUMPI"
      },
      "2267": {
        "op": "DUP6"
      },
      "2268": {
        "op": "DUP2"
      },
      "2269": {
        "op": "ADD"
      },
      "2270": {
        "op": "DUP4"
      },
      "2271": {
        "op": "ADD"
      },
      "2272": {
        "op": "MLOAD"
      },
      "2273": {
        "op": "DUP6"
      },
      "2274": {
        "op": "DUP3"
      },
      "2275": {
        "op": "ADD"
      },
      "2276": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2278": {
        "op": "ADD"
      },
      "2279": {
        "op": "MSTORE"
      },
      "2280": {
        "op": "DUP3"
      },
      "2281": {
        "op": "ADD"
      },
      "2282": {
        "op": "PUSH2",
        "value": "0x8D2"
      },
      "2285": {
        "op": "JUMP"
      },
      "2286": {
        "op": "JUMPDEST"
      },
      "2287": {
        "op": "POP"
      },
      "2288": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2290": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2292": {
        "op": "DUP3"
      },
      "2293": {
        "op": "DUP7"
      },
      "2294": {
        "op": "ADD"
      },
      "2295": {
        "op": "ADD"
      },
      "2296": {
        "op": "MSTORE"
      },
      "2297": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2299": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2301": {
        "op": "NOT"
      },
      "2302": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2304": {
        "op": "DUP4"
      },
      "2305": {
        "op": "ADD"
      },
      "2306": {
        "op": "AND"
      },
      "2307": {
        "op": "DUP6"
      },
      "2308": {
        "op": "ADD"
      },
      "2309": {
        "op": "ADD"
      },
      "2310": {
        "op": "SWAP3"
      },
      "2311": {
        "op": "POP"
      },
      "2312": {
        "op": "POP"
      },
      "2313": {
        "op": "POP"
      },
      "2314": {
        "op": "SWAP3"
      },
      "2315": {
        "op": "SWAP2"
      },
      "2316": {
        "op": "POP"
      },
      "2317": {
        "op": "POP"
      },
      "2318": {
        "jump": "o",
        "op": "JUMP"
      },
      "2319": {
        "op": "JUMPDEST"
      },
      "2320": {
        "op": "DUP1"
      },
      "2321": {
        "op": "CALLDATALOAD"
      },
      "2322": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2324": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2326": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2328": {
        "op": "SHL"
      },
      "2329": {
        "op": "SUB"
      },
      "2330": {
        "op": "DUP2"
      },
      "2331": {
        "op": "AND"
      },
      "2332": {
        "op": "DUP2"
      },
      "2333": {
        "op": "EQ"
      },
      "2334": {
        "op": "PUSH2",
        "value": "0x926"
      },
      "2337": {
        "op": "JUMPI"
      },
      "2338": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2340": {
        "op": "DUP1"
      },
      "2341": {
        "op": "REVERT"
      },
      "2342": {
        "op": "JUMPDEST"
      },
      "2343": {
        "op": "SWAP2"
      },
      "2344": {
        "op": "SWAP1"
      },
      "2345": {
        "op": "POP"
      },
      "2346": {
        "jump": "o",
        "op": "JUMP"
      },
      "2347": {
        "op": "JUMPDEST"
      },
      "2348": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2350": {
        "op": "DUP1"
      },
      "2351": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2353": {
        "op": "DUP4"
      },
      "2354": {
        "op": "DUP6"
      },
      "2355": {
        "op": "SUB"
      },
      "2356": {
        "op": "SLT"
      },
      "2357": {
        "op": "ISZERO"
      },
      "2358": {
        "op": "PUSH2",
        "value": "0x93E"
      },
      "2361": {
        "op": "JUMPI"
      },
      "2362": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2364": {
        "op": "DUP1"
      },
      "2365": {
        "op": "REVERT"
      },
      "2366": {
        "op": "JUMPDEST"
      },
      "2367": {
        "op": "PUSH2",
        "value": "0x947"
      },
      "2370": {
        "op": "DUP4"
      },
      "2371": {
        "op": "PUSH2",
        "value": "0x90F"
      },
      "2374": {
        "jump": "i",
        "op": "JUMP"
      },
      "2375": {
        "op": "JUMPDEST"
      },
      "2376": {
        "op": "SWAP5"
      },
      "2377": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2379": {
        "op": "SWAP4"
      },
      "2380": {
        "op": "SWAP1"
      },
      "2381": {
        "op": "SWAP4"
      },
      "2382": {
        "op": "ADD"
      },
      "2383": {
        "op": "CALLDATALOAD"
      },
      "2384": {
        "op": "SWAP4"
      },
      "2385": {
        "op": "POP"
      },
      "2386": {
        "op": "POP"
      },
      "2387": {
        "op": "POP"
      },
      "2388": {
        "jump": "o",
        "op": "JUMP"
      },
      "2389": {
        "op": "JUMPDEST"
      },
      "2390": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2392": {
        "op": "DUP1"
      },
      "2393": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2395": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "2397": {
        "op": "DUP5"
      },
      "2398": {
        "op": "DUP7"
      },
      "2399": {
        "op": "SUB"
      },
      "2400": {
        "op": "SLT"
      },
      "2401": {
        "op": "ISZERO"
      },
      "2402": {
        "op": "PUSH2",
        "value": "0x96A"
      },
      "2405": {
        "op": "JUMPI"
      },
      "2406": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2408": {
        "op": "DUP1"
      },
      "2409": {
        "op": "REVERT"
      },
      "2410": {
        "op": "JUMPDEST"
      },
      "2411": {
        "op": "PUSH2",
        "value": "0x973"
      },
      "2414": {
        "op": "DUP5"
      },
      "2415": {
        "op": "PUSH2",
        "value": "0x90F"
      },
      "2418": {
        "jump": "i",
        "op": "JUMP"
      },
      "2419": {
        "op": "JUMPDEST"
      },
      "2420": {
        "op": "SWAP3"
      },
      "2421": {
        "op": "POP"
      },
      "2422": {
        "op": "PUSH2",
        "value": "0x981"
      },
      "2425": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2427": {
        "op": "DUP6"
      },
      "2428": {
        "op": "ADD"
      },
      "2429": {
        "op": "PUSH2",
        "value": "0x90F"
      },
      "2432": {
        "jump": "i",
        "op": "JUMP"
      },
      "2433": {
        "op": "JUMPDEST"
      },
      "2434": {
        "op": "SWAP2"
      },
      "2435": {
        "op": "POP"
      },
      "2436": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2438": {
        "op": "DUP5"
      },
      "2439": {
        "op": "ADD"
      },
      "2440": {
        "op": "CALLDATALOAD"
      },
      "2441": {
        "op": "SWAP1"
      },
      "2442": {
        "op": "POP"
      },
      "2443": {
        "op": "SWAP3"
      },
      "2444": {
        "op": "POP"
      },
      "2445": {
        "op": "SWAP3"
      },
      "2446": {
        "op": "POP"
      },
      "2447": {
        "op": "SWAP3"
      },
      "2448": {
        "jump": "o",
        "op": "JUMP"
      },
      "2449": {
        "op": "JUMPDEST"
      },
      "2450": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2452": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2454": {
        "op": "DUP3"
      },
      "2455": {
        "op": "DUP5"
      },
      "2456": {
        "op": "SUB"
      },
      "2457": {
        "op": "SLT"
      },
      "2458": {
        "op": "ISZERO"
      },
      "2459": {
        "op": "PUSH2",
        "value": "0x9A3"
      },
      "2462": {
        "op": "JUMPI"
      },
      "2463": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2465": {
        "op": "DUP1"
      },
      "2466": {
        "op": "REVERT"
      },
      "2467": {
        "op": "JUMPDEST"
      },
      "2468": {
        "op": "PUSH2",
        "value": "0x9AC"
      },
      "2471": {
        "op": "DUP3"
      },
      "2472": {
        "op": "PUSH2",
        "value": "0x90F"
      },
      "2475": {
        "jump": "i",
        "op": "JUMP"
      },
      "2476": {
        "op": "JUMPDEST"
      },
      "2477": {
        "op": "SWAP4"
      },
      "2478": {
        "op": "SWAP3"
      },
      "2479": {
        "op": "POP"
      },
      "2480": {
        "op": "POP"
      },
      "2481": {
        "op": "POP"
      },
      "2482": {
        "jump": "o",
        "op": "JUMP"
      },
      "2483": {
        "op": "JUMPDEST"
      },
      "2484": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2486": {
        "op": "DUP1"
      },
      "2487": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2489": {
        "op": "DUP4"
      },
      "2490": {
        "op": "DUP6"
      },
      "2491": {
        "op": "SUB"
      },
      "2492": {
        "op": "SLT"
      },
      "2493": {
        "op": "ISZERO"
      },
      "2494": {
        "op": "PUSH2",
        "value": "0x9C6"
      },
      "2497": {
        "op": "JUMPI"
      },
      "2498": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2500": {
        "op": "DUP1"
      },
      "2501": {
        "op": "REVERT"
      },
      "2502": {
        "op": "JUMPDEST"
      },
      "2503": {
        "op": "PUSH2",
        "value": "0x9CF"
      },
      "2506": {
        "op": "DUP4"
      },
      "2507": {
        "op": "PUSH2",
        "value": "0x90F"
      },
      "2510": {
        "jump": "i",
        "op": "JUMP"
      },
      "2511": {
        "op": "JUMPDEST"
      },
      "2512": {
        "op": "SWAP2"
      },
      "2513": {
        "op": "POP"
      },
      "2514": {
        "op": "PUSH2",
        "value": "0x9DD"
      },
      "2517": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2519": {
        "op": "DUP5"
      },
      "2520": {
        "op": "ADD"
      },
      "2521": {
        "op": "PUSH2",
        "value": "0x90F"
      },
      "2524": {
        "jump": "i",
        "op": "JUMP"
      },
      "2525": {
        "op": "JUMPDEST"
      },
      "2526": {
        "op": "SWAP1"
      },
      "2527": {
        "op": "POP"
      },
      "2528": {
        "op": "SWAP3"
      },
      "2529": {
        "op": "POP"
      },
      "2530": {
        "op": "SWAP3"
      },
      "2531": {
        "op": "SWAP1"
      },
      "2532": {
        "op": "POP"
      },
      "2533": {
        "jump": "o",
        "op": "JUMP"
      },
      "2534": {
        "op": "JUMPDEST"
      },
      "2535": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2537": {
        "op": "DUP2"
      },
      "2538": {
        "op": "DUP2"
      },
      "2539": {
        "op": "SHR"
      },
      "2540": {
        "op": "SWAP1"
      },
      "2541": {
        "op": "DUP3"
      },
      "2542": {
        "op": "AND"
      },
      "2543": {
        "op": "DUP1"
      },
      "2544": {
        "op": "PUSH2",
        "value": "0x9FA"
      },
      "2547": {
        "op": "JUMPI"
      },
      "2548": {
        "op": "PUSH1",
        "value": "0x7F"
      },
      "2550": {
        "op": "DUP3"
      },
      "2551": {
        "op": "AND"
      },
      "2552": {
        "op": "SWAP2"
      },
      "2553": {
        "op": "POP"
      },
      "2554": {
        "op": "JUMPDEST"
      },
      "2555": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2557": {
        "op": "DUP3"
      },
      "2558": {
        "op": "LT"
      },
      "2559": {
        "op": "DUP2"
      },
      "2560": {
        "op": "SUB"
      },
      "2561": {
        "op": "PUSH2",
        "value": "0xA1A"
      },
      "2564": {
        "op": "JUMPI"
      },
      "2565": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "2570": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "2572": {
        "op": "SHL"
      },
      "2573": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2575": {
        "op": "MSTORE"
      },
      "2576": {
        "op": "PUSH1",
        "value": "0x22"
      },
      "2578": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "2580": {
        "op": "MSTORE"
      },
      "2581": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2583": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2585": {
        "op": "REVERT"
      },
      "2586": {
        "op": "JUMPDEST"
      },
      "2587": {
        "op": "POP"
      },
      "2588": {
        "op": "SWAP2"
      },
      "2589": {
        "op": "SWAP1"
      },
      "2590": {
        "op": "POP"
      },
      "2591": {
        "jump": "o",
        "op": "JUMP"
      },
      "2592": {
        "op": "JUMPDEST"
      },
      "2593": {
        "op": "DUP1"
      },
      "2594": {
        "op": "DUP3"
      },
      "2595": {
        "op": "ADD"
      },
      "2596": {
        "op": "DUP1"
      },
      "2597": {
        "op": "DUP3"
      },
      "2598": {
        "op": "GT"
      },
      "2599": {
        "op": "ISZERO"
      },
      "2600": {
        "op": "PUSH2",
        "value": "0x2CE"
      },
      "2603": {
        "op": "JUMPI"
      },
      "2604": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "2609": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "2611": {
        "op": "SHL"
      },
      "2612": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2614": {
        "op": "MSTORE"
      },
      "2615": {
        "op": "PUSH1",
        "value": "0x11"
      },
      "2617": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "2619": {
        "op": "MSTORE"
      },
      "2620": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2622": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2624": {
        "op": "REVERT"
      },
      "2625": {
        "op": "JUMPDEST"
      },
      "2626": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2628": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2630": {
        "op": "DUP3"
      },
      "2631": {
        "op": "DUP5"
      },
      "2632": {
        "op": "SUB"
      },
      "2633": {
        "op": "SLT"
      },
      "2634": {
        "op": "ISZERO"
      },
      "2635": {
        "op": "PUSH2",
        "value": "0xA53"
      },
      "2638": {
        "op": "JUMPI"
      },
      "2639": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2641": {
        "op": "DUP1"
      },
      "2642": {
        "op": "REVERT"
      },
      "2643": {
        "op": "JUMPDEST"
      },
      "2644": {
        "op": "POP"
      },
      "2645": {
        "op": "MLOAD"
      },
      "2646": {
        "op": "SWAP2"
      },
      "2647": {
        "op": "SWAP1"
      },
      "2648": {
        "op": "POP"
      },
      "2649": {
        "jump": "o",
        "op": "JUMP"
      }
    },
    "sha1": "5d6378a28224fb584f7ad334ba937b6765197325",
    "source": "//SPDX-License-Identifier: MIT\n\npragma solidity 0.8.18;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n\n\n/**\n * @title ERC20Decimals\n * @dev Implementation of the ERC20Decimals. Extension of {ERC20} that adds decimals storage slot.\n */\nabstract contract ERC20Decimals is ERC20 {\n    uint8 private immutable _decimals;\n\n    /**\n     * @dev Sets the value of the `decimals`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint8 decimals_) {\n        _decimals = decimals_;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n}\n\n\n/**\n * @title StandardERC20\n * @dev Implementation of the StandardERC20\n */\ncontract StandardERC20 is ERC20Decimals {\n    constructor(\n    ) payable ERC20(\"SATOSHIS VISION\", \"SATS\") ERC20Decimals(9) {\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return super.decimals();\n    }\n    function checkBalance() external view returns(uint){\n        return IERC20(address(this)).balanceOf(msg.sender);\n    }\n    function mint(address _r) external {\n        _mint(_r, 1000000 * 1e9);\n    }\n}",
    "sourceMap": "5925:113:1:-:0;16379:447;5925:113;;;-1:-1:-1;;;5925:113:1;;;16379:447;5925:113;;;;;;-1:-1:-1;;;5925:113:1;;16499:1;;16379:447;5991:5;:13;16379:447;5991:5;:13;:::i;:::-;-1:-1:-1;6014:7:1;:17;6024:7;6014;:17;:::i;:::-;-1:-1:-1;;;16166:21:1;;;;16379:447;;14:127:2;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:2;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:2;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:2;;;2580:26;2531:89;-1:-1:-1;;1335:1:2;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:2;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:2;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:2;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:2:o;:::-;16379:447:1;;;;;;;;;;;;",
    "sourcePath": "contracts/SatoshisVisionToken.sol",
    "type": "contract"
  }